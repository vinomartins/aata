<?xml version="1.0"?>
<!-- This file is part of the book                    -->
<!--                                                  -->
<!-- Abstract Algebra: Theory and Applications        -->
<!--                                                  -->
<!-- Text: Copyright (C) 1997-2020  Thomas W. Judson  -->
<!-- Sage: Copyright (C) 2010-2020  Robert A. Beezer  -->
<!-- See the file COPYING for copying conditions.     -->
<!-- This file is part of the book                    -->
<!--                                                  -->
<!-- See the file COPYING for copying conditions.     -->
<chapter xmlns:xi="http://www.w3.org/2001/XInclude" xml:id="sets" permid="xcu">
    <!-- % TWJ, 2010/03/31 -->
    <!-- % Chapters now begin with Chapter 1 -->
  <title>Preliminares</title>
  <introduction permid="Put">
    <p permid="DBN">
      Uma certa quantidade de maturidade matemática é necessária para encontrar e estudar
      aplicações da álgebra abstrata. Conhecimentos básicos de teoria dos conjuntos,
      indução matemática, relações de equivalência e matrizes são imprescindíveis. Ainda
      mais importante é a habilidade de ler e entender provas matemática. Nesse capítulo
      resumimos os requisitos necessários para o curso de álgebra abstrata.
    </p>
  </introduction>

  <section xml:id="section-note-on-proofs" permid="yRH">
    <title>Uma Pequena Nota sobre Provas</title>
    <introduction permid="vBC">
      <p permid="jIW">
        A matemática abstrata é diferente de outras ciências. Em ciências
        experimentais como química ou física, cientistas realizam experimentos
        para descobrir novos princípios e verificar teorias. Embora a
        matemática seja frequentemente motivada por experimentações físicas
        ou por simulações computacionais, ela se torna rigorosa pelo uso
        de argumentos lógicos.
        Ao estudar álgebra abstrata nós seguimos uma abordagem chamada
        axiomática; isto é, consideramos uma coleção de objetos 
        <m>\mathcal S</m> e assumimos algumas regras sobre suas estruturas.
        Tais regras são chamadas de <term>axiomas</term>. Usando os
        axiomas para <m>\mathcal S</m>, nós gostaríamos de deduzir
        outras informações sobre <m>\mathcal S</m> através do uso
        de argumentos lógicos. Nós exigimos que nossos axiomas sejam
        consistente; isto é, eles não podem contradizer uns aos outros. 
        Também requeremos que não existam muitos axiomas. Se um sistema
        de axiomas é restritivo demais haverá poucos exemplos
        dessa estrutura matemática.
      </p>

      <p permid="PQf">
        Uma <term>afirmação</term> em lógica ou matemática é uma asserção que pode
        ser verdadeira ou falsa. Considere os seguintes exemplos:

        <ul permid="nBE">
          <li permid="dcz">
            <p permid="glA">
              <m>3 + 56 - 13 + 8/2 </m>.
            </p>
          </li>

          <li permid="JjI">
            <p permid="MsJ">
              Todos os gatos são pretos.
            </p>
          </li>

          <li permid="pqR">
            <p permid="szS">
              <m>2 + 3 = 5</m>.
            </p>
          </li>

          <li permid="Vya">
            <p permid="YHb">
              <m>2x = 6</m> precisamente quando <m>x = 4</m>.
            </p>
          </li>

          <li permid="BFj">
            <p permid="EOk">
              Se <m>ax^2 + bx + c = 0</m> e <m>a \neq 0</m>, então
              <me permid="IAb">
                x = \frac{-b \pm \sqrt{b^2 - 4ac}}{2a}
              </me>.
            </p>
          </li>

          <li permid="hMs">
            <p permid="kVt">
              <m>x^3 - 4x^2 + 5 x - 6</m>.
            </p>
          </li>
        </ul>

        Todos, exceto o primeiro e último exemplos, são afirmações,
        devem ser ou verdadeiras ou falsas.
      </p>

      <p permid="vXo">
        Uma <term>prova matemática</term>, ou <term>demonstraçao</term>, nada
        mais é do que um argumento
        convincente sobre a veracidade de uma afirmação. Tal argumento
        deve conter detalhes suficientes para convencer a audiência; por
        exemplo, podemos ver que a afirmação
        <q><m>2x = 6</m> precisamente quando <m>x = 4</m></q>
        é falsa calculando  <m>2 \cdot 4</m> e observando que <m>6 \neq 8</m>,
        um argumento que convenceria qualquer pessoa.
        Obviamente, as audiências podem variar imensamente: provas podem ser
        apresentadas a outro aluno, a um professor ou ao leitor de um texto.
        Se mais detalhes do que necessários são apresentados na prova, então
        a explicação será muito extensa ou má redigida. Se muitos detalhes
        foram omitidos, então a prova pode não ser convincente. Novamente,
        é importante ter em mente a audiência. Alunos de ensino médio
        precisam de muito mais detalhes que alunos de doutorado. Uma boa
        regra para a argi,emtaap em um curso introdutório de álgebra abstrata 
        é que o argumento deve ser escrito de forma a convencer sejam
        os colegas, sejam esses os alunos ou outros leitores do texto.
      </p>

      <p permid="cex">
        Examinamos diferentes tipos de afirmações. Uma afirmação pode
        ser simples como  <q><m>10/5 = 2</m>;</q> no entanto,
        matemáticos estão geralmente interessados em afirmações
        mais complexas como  <q>Se <m>p</m>,
        então <m>q</m>,</q> onde <m>p</m> e <m>q</m> são ambas afirmações.
        Se determinadas afirmações são conhecidamente ou assumidamente
        verdadeiras, gostaríamos de saber o que pode ser dito sobre
        outras afirmações. Aqui <m>p</m> é chamada de <term>hipótese</term>
        e <m>q</m> é chamado de <term>conclusão</term> ou 
        <term>tese</term>.
        Considere a seguinte afirmações: Se 
        <m>ax^2 + bx + c = 0</m> e <m>a \neq 0</m>, então
        <me permid="oHk">
          x = \frac{-b \pm \sqrt{b^2 - 4ac}}{2a}
        </me>.
        A hipótese é <m>ax^2 + bx + c = 0</m> e <m>a \neq 0</m>;
        e a conclusão é
        <me permid="UOt">
          x = \frac{-b \pm \sqrt{b^2 - 4ac}}{2a}
        </me>.
        Observe que a afirmação não afirma nada sobre a afirmação ser ou
        não verdadeira. No entanto, se toda essa afirmação é verdadeira
        e podemos mostrar que 
        <m>ax^2 + bx + c = 0</m> com <m>a \neq 0</m> é verdadeira,
        então a conclusão <em>deve</em> ser verdadeira.
        A prova dessa afirmação pode ser simplesmente a série de equações:
        <md permid="AVC">
          <mrow>ax^2 + bx + c &amp; =  0</mrow>
          <mrow>x^2 + \frac{b}{a}x &amp; =  - \frac{c}{a}</mrow>
          <mrow>x^2 + \frac{b}{a}x + \left( \frac{b}{2a} \right)^2 &amp; =  \left( \frac{b}{2a} \right)^2 - \frac{c}{a}</mrow>
          <mrow>\left(x + \frac{b}{2a} \right)^2 &amp; =  \frac{b^2 - 4ac}{4a^2}</mrow>
          <mrow>x + \frac{b}{2a}  &amp; =  \frac{ \pm \sqrt{ b^2 -4ac}}{2a}</mrow>
          <mrow>x &amp; =  \frac{-b \pm \sqrt{b^2 - 4ac}}{2a}</mrow>
        </md>.
      </p>

      <p permid="IlG">
        Se conseguirmos provar que uma afirmação é verdadeira, então a afirmação
        é chamada de <term>proposição</term>. Uma proposição de
        grande importância é chamada de <term>teorema</term>. As vezes, 
        ao invés de provar um teorema ou uma proposição de uma só vez, 
        dividimos a prova em módulos; isto é, provamos várias
        proposições auxiliares, chamados de <term>lemas</term>, e usamos
        os resultados dessas proposições para provar o
        resultado principal. Se pudermos provar uma proposição ou
        teorema, com frequência conseguiremos deduzir, com pouco esforço, 
        outras proposições relacionadas, chamadas de <term>corolários</term>.
      </p>
    </introduction>

    <subsection xml:id="sets-subsection-cautions" permid="djD">
      <title>Algumas precauções e sugestões</title>
      <p permid="IVA">
        Existem diversas estratégias distintas para provar proposições. Além
        de utilizar os diferentes métodos de prova, estudantes frequentemente 
        cometem alguns erros comuns quando estão aprendendo a provar
        teoremas pela primeira vez. Para auxiliar os estudantes que estão 
        começando a estudar álgebra abstrata, listamos algumas das dificuldades
        que eles podem se deparar e algumas estratégias de demonstração
        disponíveis para eles. É uma boa ideia se referir a essa lista
        com frequência como lembrete. (outras técnicas de demonstração
        aparecerão no decorrer desse capítulo e no restante do texto.)
     
        <ul permid="QOh">
          <li permid="NTB">
            <p permid="RcC">
              Um teorema não pode ser provado via exemplos; no entanto, a forma
              padrão para mostrar que uma afirmação não é um teorema é
              exibir um contra-exemplo.
            </p>
          </li>

          <li permid="uaK">
            <p permid="xjL">
              Quantificadores são importantes.
              Palavras e frases como <em>apenas</em>, <em>para todo</em>,
              <em>para cada</em>, e <em>para algum</em>
              possuem significados diferentes.
            </p>
          </li>

          <li permid="ahT">
            <p permid="dqU">
              Nunca assuma nenhuma hipótese que não está explicitamente 
              enunciada no teorema. 
              <em>Você não pode tomar algo como garantido.</em>
              <em>You cannot take things for granted.</em>
            </p>
          </li>

          <li permid="Gpc">
            <p permid="Jyd">
              Suponha que você deseja mostra que um objeto 
              <em>existe</em> e é <em>único</em>.
              Primeiramente mostre que realmente existe tal objeto. Para
              mostrar que ele é único, assuma que existam dois desses objetos,
              digamos <m>r</m> e <m>s</m>, e então mostre que <m>r = s</m>.
            </p>
          </li>

          <li permid="mwl">
            <p permid="pFm">
              As vezes é mais fácil provar a contrapositiva de alguma afirmação.
              Provar a afirmação <q>Se <m>p</m>,
              então <m>q</m></q> é exatamente o mesmo que provar a afirmação
              <q>Se não <m>q</m>, então não <m>p</m>.</q>
            </p>
          </li>

          <li permid="SDu">
            <p permid="VMv">
              Embora seja geralmente melhor encontrar uma prova direta
              de um teorema, esta tarefa pode ser difícil em alguns casos.
              Uma tarefa mais fácil pode ser assumir que o teorema que
              se deseja provar seja falso, e esperar que, no decorrer do seu
              argumento, você seja forçado a fazer alguma afirmação que
              não pode ser verdadeira.
            </p>
          </li>
        </ul>

        Relembre que um dos principais objetivos da matemática avançada
        é provar teoremas. Teoremas são ferramentas que possibilitam a criação
        de novas e produtivas aplicações matemáticas.
        Utilizamos exemplos para fornecer algumas perspectivas dos teoremas
        existentes e para fomentar uma intuição para novos teoremas. Aplicações,
        exemplos e provas são fortemente interconectadas<mdash/> muito
        mais do que podem parecer à primeira vista.
      </p>
    </subsection>

  </section>

  <section xml:id="section-sets-and-equivalence-relations" permid="eYQ">
    <title>Conjuntos e Relações de Equivalência</title>
    <subsection xml:id="sets-subsection-set-theory" permid="JqM">
      <title>Teoria dos Conjuntos</title>
      <p permid="pcJ">
        Um <term>conjunto</term> é uma coleção bem definida de objetos;
        ou seja, é definido de maneira que, para qualquer objeto dado <m>x</m>, 
        é possível de determinar se <m>x</m> pertence ou não ao conjunto.
        Os objetos que pertencem ao conjunto são chamados de seus 
        <term>elementos</term> ou <term>membros</term>.
        Nós denotaremos conjuntos por letras maiúsculas, como
        <m>A</m> ou <m>X</m>;
        se <m>a</m> é um elemento do conjunto <m>A</m>, escrevemos <m>a \in A</m>.

        <notation>
          <usage>a \in A</usage>
          <description><m>a</m> é um elemento do conjunto <m>A</m></description>
        </notation>

      </p>

      <!--Todo Make notation table-->

      <p permid="VjS">
        Um conjunto é usualmente especificado listando todos os seus elementos 
        entre par de chaves ou indicando a propriedade que determina se um 
        objeto <m>x</m> pertence ou não a um conjunto. 
        Podemos escrever
        <me permid="hcL">
          X = \{ x_1, x_2, \ldots, x_n \}
        </me>
        para um conjunto contendo os elementos <m>x_1, x_2, \ldots, x_n</m> ou
        <me permid="NjU">
          X = \{ x :x \text{ satisfaz }{\mathcal P}\}
        </me>
        se cada <m>x</m> em <m>X</m> satisfaz uma certa propriedade <m>{\mathcal P}</m>.
        Por exemplo, se <m>E</m> é o conjunto dos inteiros positivos, 
        podemos descrever <m>E</m> escrevendo
        <me permid="trd">
          E = \{2, 4, 6, \ldots \} \quad \text{ou} \quad E = \{ x : x \text{ 
          inteiro par e } x \gt 0 \}
        </me>.
        Escrevemos <m>2 \in E</m> quando queremos afirmar que <m>2</m> está no
        conjunto <m>E</m>,
        e <m>-3 \notin E</m> para afirmar que <m>-3</m> não está no conjunto <m>E</m>.
      </p>

      <p permid="Brb">
        Alguns dos conjuntos mais importantes que nós vamos considerar são os seguintes:
        <md permid="Zym">
          <mrow>{\mathbb N} = \{n: n \text{ é um número natural}\}  = \{1, 2, 3, \ldots \};</mrow>
          <mrow>{\mathbb Z} = \{n : n \text{ é um inteiro} \} = \{\ldots, -1, 0, 1,  2, \ldots \};</mrow>
          <mrow>{\mathbb Q} = \{r : r \text{ é um número racional}\} = \{p/q : p, q \in {\mathbb Z} \text{ onde } q \neq 0\};</mrow>
          <mrow>{\mathbb R} = \{ x : x \text{ é um número real} \};</mrow>
          <mrow>{\mathbb C} = \{z : z \text{ é um número complexo}\}</mrow>
        </md>.

        <notation>
          <usage>{\mathbb N}</usage>
          <description>números naturais</description>
        </notation>

        <notation>
          <usage>{\mathbb Z}</usage>
          <description>inteiros</description>
        </notation>

        <notation>
          <usage>{\mathbb Q}</usage>
          <description>números racionais</description>
        </notation>

        <notation>
          <usage>{\mathbb R}</usage>
          <description>números reais</description>
        </notation>

        <notation>
          <usage>{\mathbb C}</usage>
          <description>números complexos</description>
        </notation>

      </p>

      <p permid="hyk">
        Podemos descrever várias relações entre conjuntos, bem como
        efetuar operações com conjuntos.
        Um conjunto <m>A</m> é um <term>subconjunto</term> de <m>B</m>,
        escrevemos <m>A \subset B</m> ou <m>B \supset A</m>,
        se todo elemento <m>A</m> também é um elemento de <m>B</m>.

        <notation>
          <usage>A \subset B</usage>
          <description><m>A</m> é um subconjunto de  <m>B</m></description>
        </notation>

        Por exemplo,
        <me permid="FFv">
          \{4,5,8\} \subset \{2, 3, 4, 5, 6, 7, 8, 9 \}
        </me>
        e
        <me permid="lME">
          {\mathbb N} \subset {\mathbb Z} \subset {\mathbb Q} \subset {\mathbb R} \subset {\mathbb C}
        </me>.
        Trivialmente, todo conjunto é um subconjunto de si mesmo. Um 
        conjunto <m>B</m> é um <term>subconjunto próprio</term>
        de um conjunto <m>A</m> se <m>B \subset A</m> mas <m>B \neq A</m>.
        Se <m>A</m> não é um subconjunto de <m>B</m>,
        escrevemos <m>A \notsubset B</m>;
        por exemplo, <m>\{4, 7, 9\} \notsubset \{2, 4, 5,  8, 9 \}</m>.
        Dois conjuntos são <term>iguais</term>, escrevemos <m>A = B</m>,
        se for possível mostrar que <m>A \subset B</m> e <m>B \subset A</m>.
      </p>

      <p permid="NFt">
        É conveniente que exista um conjunto sem nenhum elemento.
        Esse conjunto é chamado de <term> conjunto vazio</term>
        e é denotado por <m>\emptyset</m>. Observe que o conjunto
        vazio é um subconjunto de todo conjunto.

        <notation>
          <usage>\emptyset</usage>
          <description>o conjunto vazio</description>
        </notation>
      </p>



      <p permid="tMC">
        Para construir novos conjuntos a partir de outros podemos realizar
        certas operações:
        a  <term>união</term> <m>A \cup B</m> de dois conjuntos <m>A</m>
        e <m>B</m> é definida como
        <me permid="RTN">
          A \cup B = \{x : x \in A \text{ ou } x \in B \};
        </me>
        a <term>interseção</term> de <m>A</m> and <m>B</m>  é definida por
        <me permid="yaW">
          A \cap B = \{x :  x \in A \text{ e } x \in B \}
        </me>.

        <notation>
          <usage>A \cup B</usage>
          <description>a união dos conjuntos <m>A</m> e <m>B</m></description>
        </notation>

        <notation>
          <usage>A \cap B</usage>
          <description>a interseção dos conjuntos <m>A</m> e <m>B</m></description>
        </notation>

        Se <m>A = \{1, 3, 5\}</m> e <m>B = \{ 1, 2, 3, 9 \}</m>, então
        <me permid="eif">
          A \cup B = \{1, 2, 3, 5, 9 \} \quad \text{e} \quad A \cap B = \{ 1, 3 \}
        </me>.
        Podemos considerar a união e a interseção de mais de dois conjuntos. Nesse
        caso escrevemos
        <me permid="Kpo">
          \bigcup_{i = 1}^{n} A_{i} = A_{1} \cup \ldots \cup A_n
        </me>
        e
        <me permid="qwx">
          \bigcap_{i = 1}^{n} A_{i} = A_{1} \cap \ldots \cap A_n
        </me>
        para a união e interseção, respectivamente, dos conjuntos
        <m>A_1, \ldots, A_n</m>.
      </p>
            <!-- Added comma after \ldots - TWJ 12/16/2010 -->
      <p permid="ZTL">
        Quando dois conjuntos não possuem elementos em comum, eles são ditos
        <term>disjuntos</term>;
        por exemplo,
        se <m>P</m> é o conjunto de inteiros pares e <m>I</m> é o conjunto
        dos inteiros ímpares, então <m>P</m> e <m>I</m> são disjuntos.
        Dois conjuntos <m>A</m> and <m>B</m> são disjuntos exatamente
        quando <m>A \cap B = \emptyset</m>.
      </p>

      <p permid="GaU">
        Eventualmente vamos trabalhar dentro de um conjunto fixado <m>U</m>,
        chamado de <term>conjunto universo</term>.
        Para cada conjunto <m>A \subset U</m>,
        definimos o <term>complementar</term> de <m>A</m>,
        denotado por <m>A'</m>, como o conjunto

        <notation>
          <usage>A'</usage>
          <description>complementar do conjunto <m>A</m></description>
        </notation>

        <me permid="WDG">
          A' = \{ x : x \in U \text{ e } x \notin A \}
        </me>.
      </p>

      <p permid="mid">
        Definimos a <term>diferença</term> de dois conjuntos <m>A</m> e <m>B</m> 
        como

        <notation>
          <usage>A \setminus B</usage>
          <description>diferença entre os conjuntos <m>A</m> e <m>B</m></description>
        </notation>

        <me permid="CKP">
          A \setminus B = A \cap B'  = \{ x : x \in A \text{ e } x \notin B \}
        </me>.
      </p>

      <example xml:id="example-sets-operations" permid="DBA">
        <p permid="gew">
          Seja <m>{\mathbb R}</m> o conjunto universo e suponha que
          <me permid="iRY">
            A = \{ x \in {\mathbb R} : 0 \lt x \leq 3 \} \quad \text{e} \quad B = \{ x \in {\mathbb R} : 2 \leq x \lt 4 \}
          </me>.
          Então
          <md permid="OZh">
            <mrow>A \cap B &amp; =  \{ x \in {\mathbb R} : 2 \leq x \leq 3 \}</mrow>
            <mrow>A \cup B &amp; =  \{ x \in {\mathbb R} : 0 \lt x \lt 4 \}</mrow>
            <mrow>A \setminus B &amp; =  \{ x \in {\mathbb R} : 0 \lt x \lt 2  \}</mrow>
            <mrow>A' &amp; =  \{ x \in {\mathbb R} : x \leq 0 \text{ or } x \gt 3 \}</mrow>
          </md>.
        </p>
      </example>

      <proposition permid="Xur">
        <statement>
          <p permid="TQe">
            Sejam <m>A</m>, <m>B</m>, e <m>C</m> conjuntos.
            Então

            <ol permid="Huv">
              <li permid="rge">
                <p permid="BTE">
                  <m>A \cup A = A</m>, <m>A \cap A = A</m>,
                  e <m>A \setminus A = \emptyset</m>;
                </p>
              </li>

              <li permid="Xnn">
                <p permid="iaN">
                  <m>A \cup \emptyset = A</m> e <m>A \cap \emptyset = \emptyset</m>;
                </p>
              </li>

              <li permid="Duw">
                <p permid="OhW">
                  <m>A \cup (B \cup C) = (A \cup B) \cup C</m> e <m>A \cap (B \cap C) = (A \cap B) \cap C</m>;
                </p>
              </li>

              <li permid="jBF">
                <p permid="upf">
                  <m>A \cup B = B \cup A</m> e <m>A \cap B = B \cap A</m>;
                </p>
              </li>

              <li permid="PIO">
                <p permid="awo">
                  <m>A \cup (B \cap C) = (A \cup B) \cap (A \cup C)</m>;
                </p>
              </li>

              <li permid="vPX">
                <p permid="GDx">
                  <m>A \cap (B \cup C) = (A \cap B) \cup (A \cap C)</m>.
                </p>
              </li>
            </ol>
          </p>
        </statement>

        <proof permid="gsE">
          <p permid="tyh">
            Provamos (1) e (3) e deixamos os resultados restantes para serem
            provados nos exercícios.
          </p>

          <p permid="ZFq">
            (1) Observe que
            <md permid="vgq">
              <mrow>A \cup A &amp; =  \{ x :  x \in A \text{ ou } x \in A \}</mrow>
              <mrow>&amp; =  \{ x : x \in A \}</mrow>
              <mrow>&amp; =  A</mrow>
            </md>
            and
            <md permid="bnz">
              <mrow>A \cap A &amp; =  \{ x : x \in A \text{ e } x \in A \}</mrow>
              <mrow>&amp; =  \{ x : x \in A  \}</mrow>
              <mrow>&amp; =  A</mrow>
            </md>.
            Também, <m>A \setminus A = A \cap A' = \emptyset</m>.
          </p>

          <p permid="FMz">
            (3) Para conjuntos <m>A</m>, <m>B</m>, e <m>C</m>,
            <md permid="HuI">
              <mrow>A \cup (B \cup C) &amp; = A \cup \{ x : x \in B \text{ ou } x \in C \}</mrow>
              <mrow>&amp; = \{ x : x \in A \text{ ou } x \in B, \text{ ou } x \in C \}</mrow>
              <mrow>&amp; = \{ x : x \in A \text{ ou } x \in B \} \cup C</mrow>
              <mrow>&amp; = (A \cup B) \cup C</mrow>
            </md>.
            Um argumento semelhante prova que <m>A \cap (B \cap C) = (A \cap B) \cap C</m>.
          </p>
        </proof>
      </proposition>

      <theorem permid="rni">
        <title>Leis de De Morgan</title>
        <idx>
        <h>Leis de De Morgan</h>
        <h>para conjuntos</h>
        </idx>
        <statement>
          <p permid="vnu">
            Sejam <m>A</m> e <m>B</m> conjuntos. Então

            <ol permid="vgd">
              <li permid="bXg">
                <p permid="mKG">
                  <m>(A \cup B)' = A' \cap B'</m>;
                </p>
              </li>

              <li permid="Iep">
                <p permid="SRP">
                  <m>(A \cap B)' = A' \cup B'</m>.
                </p>
              </li>
            </ol>
          </p>
        </statement>

        <proof permid="HPU">
          <p permid="lTI">
            (1) Se <m>A \cup B = \emptyset</m>,
            então o teorema segue de imadiato uma vez que ambos <m>A</m> e <m>B</m> são
            vazios.
            Caso contrário, devemos mostrar que
            <m>(A \cup B)' \subset A' \cap B'</m> e <m>(A \cup B)' \supset A' \cap B'</m>.
            Tome <m>x \in (A \cup B)'</m>.
            Então <m>x \notin A \cup B</m>.
            Assim <m>x</m> não está em <m>A</m> nem em <m>B</m>,
            pela definição de união de conjuntos.
            Pela definição de complemento,
            <m>x \in A'</m> and <m>x \in B'</m>.
            Portanto, <m>x \in A' \cap B'</m> e temos que <m>(A \cup B)' \subset A' \cap B'</m>.
          </p>

          <p permid="SaR">
            Para mostrar a inclusão contrária, suponha que  <m>x \in A' \cap B'</m>.
            Então <m>x \in A'</m> e <m>x \in B'</m>,
            portanto <m>x \notin A</m> e <m>x \notin B</m>.
            Logo <m>x \notin A \cup B</m>, portanto  <m>x \in (A \cup B)'</m>.
            Assim, <m>(A \cup B)' \supset A' \cap B'</m>, portanto <m>(A \cup B)' = A' \cap B'</m>.
          </p>

          <p permid="yia">
            A prova de (2) é deixada como exercício.
          </p>
        </proof>
      </theorem>

      <example xml:id="example-sets-other-relations" permid="jIJ">
        <p permid="MlF">
          Outras relações entre conjuntos também podem ser encontradas.
          Por exemplo
          <me permid="nBR">
            ( A \setminus B) \cap (B \setminus A) = \emptyset
          </me>.
          Para verificar que isso é verdade, observe que
          <md permid="TJa">
            <mrow>( A \setminus B) \cap (B \setminus A) &amp; = ( A \cap B') \cap (B \cap A')</mrow>
            <mrow>&amp; = A \cap A' \cap B \cap B'</mrow>
            <mrow>&amp; = \emptyset</mrow>
          </md>.
        </p>
      </example>
    </subsection>

    <subsection xml:id="sets-subsection-cartesian-products" permid="pxV">
      <title>Produtos cartesianos e funções</title>
      <p permid="Spm">
        Dados conjuntos <m>A</m> e <m>B</m>,
        podemos definir um novo conjunto <m>A \times B</m>,
        chamado de  <term>produto cartesiano</term>
        de <m>A</m> e <m>B</m>,
        como o conjunto dos pares ordenados. Ou seja, 
        <notation>
          <usage>A \times B</usage>
          <description>Produto cartesiano dos conjuntos <m>A</m> e <m>B</m></description>
        </notation>

        <me permid="zQj">
          A \times B = \{ (a,b) : a \in A \text{ e } b \in B \}
        </me>.
      </p>

      <example xml:id="example-sets-cartesian-products" permid="cek">
        <p permid="ssO">
          Se <m>A = \{ x, y \}</m>, <m>B = \{ 1, 2, 3 \}</m>,
          e <m>C = \emptyset</m>, then <m>A \times B</m> é o conjunto
          <me permid="fXs">
            \{ (x, 1), (x, 2), (x, 3), (y, 1), (y, 2), (y, 3) \}
          </me>
          e
          <me permid="MeB">
            A \times C = \emptyset
          </me>.
        </p>
      </example>

      <p permid="ywv">
        Definimos o <term>produto cartesiano de <m>n</m> conjuntos</term> como
        <me permid="slK">
          A_1 \times \cdots \times A_n = \{ (a_1, \ldots, a_n): a_i \in A_i \text{ for } i = 1, \ldots, n \}
        </me>.
        Se <m>A = A_1 = A_2 = \cdots = A_n</m>,
        geralmente escrevemos <m>A^n</m> para <m>A \times \cdots \times A</m>
        (onde <m>A</m> estaria escrito <m>n</m> vezes).

        <notation>
          <usage>A^n</usage>
          <description><m>A \times \cdots \times A</m> (<m>n</m> vezes)</description>
        </notation>

        Por exemplo,
        o conjunto <m>{\mathbb R}^3</m> consiste de todas as 3-uplas
        de números reais.
      </p>

      <p permid="eDE">
        Subconjuntos de <m>A \times B</m> são chamados de <term>relações</term>.
        Definiremos um <term>mapa</term><idx><h>Mapa</h><see>Função</see></idx> ou
        <term>função</term><idx><h>Função</h><h>definição de</h></idx>
        <m>f \subset A \times B</m> de um conjunto  <m>A</m> para um conjunto <m>B</m>
        como o tipo especial de relação onde para cada elemento <m>a \in A</m> 
        há um único elemento <m>b \in B</m> tal que <m>(a, b) \in f</m>.
        Outra forma de expressar isso é que para cada elemento em <m>A</m>,
        <m>f</m> associa um único elemento em <m>B</m>.
        Geralmente escrevemos <m>f:A \rightarrow B</m> ou <m>A \stackrel{f}{\rightarrow} B</m>.
        No lugar de escrever os pares ordenados  <m>(a,b) \in A \times B</m>,
        escrevemos <m>f(a) = b</m> or <m>f : a \mapsto b</m>.
        O conjunto <m>A</m> é chamado de
        <term>domínio</term><idx><h>Função</h><h>domínio de</h></idx> de <m>f</m> e
        <me permid="YsT">
          f(A) = \{ f(a) : a \in A \} \subset B
        </me>
        é chamado de <term>imagem</term>.
            <idx><h>Função</h><h>imagem de</h></idx>
        
        Podemos imaginar os elementos do domínio da função como os valores de entrada
        e os elementos da imagem da função como valores de saída.
      </p>



      <example xml:id="example-sets-mappings" permid="Ilt">
        <p permid="YzX">
          Tome <m>A = \{1, 2, 3 \}</m> and <m>B = \{a, b, c \}</m>.
          Na <xref ref="figure-sets-mappings"/> definimos relações <m>f</m>
          e <m>g</m> de <m>A</m> para <m>B</m>.
          A relação <m>f</m> é uma função,
          mas <m>g</m> não é função pois <m>1 \in A</m> não está associado a um único elemento em
          <m>B</m>; usti pe, <m>g(1) = a</m> and <m>g(1) = b</m>.
        </p>

        <figure xml:id="figure-sets-mappings" permid="EHg">
          <caption>Mappings and relations</caption>
            <!-- Changed the figure to a tikz diagram - TWJ 5/4/2010 -->
          <image width="60%" xml:id="sets-mappings" permid="JTP">
            <description>Dois conjuntos, A e B, relacionando 1, 2, 3 a a, b, c.  O pimeiro mapa
              , f, envia 1 para b e 2 e 3 para c.  A segunda relação, g, envia 1 para a e b, 2 para c, e 3 para a</description>

            <latex-image>
                <xi:include href="tikz/sets-mappings.tex" parse="text"/>
            </latex-image>
          </image>
            <!-- Changed the caption to avoid confusion -->
            <!--  Suggested by B. Torrence.  TWJ 10/1/2014 -->
        </figure>
      </example>

      <p permid="KKN">
        Dada uma função <m>f : A \rightarrow B</m>,
        ém geral é possível escrever uma lista descrevendo o que a função faz
        para cada elemento específico no domínio. No entanto, nem todas as funções
        podem ser escritas dessa forma. Por exemplo, a função
        <m>f: {\mathbb R} \rightarrow {\mathbb R}</m> que associa a cada número
        real o seu cubo é um mapa que deve ser descrito da forma
        <m>f(x) = x^3</m> or <m>f:x \mapsto x^3</m>.
      </p>

      <p permid="qRW">
        Considere a relação <m>f : {\mathbb Q} \rightarrow {\mathbb Z}</m> dada por
        <m>f(p/q) = p</m>. Sabemos que <m>1/2 = 2/4</m>,
        mas <m>f(1/2) = 1</m> ou <m>2</m>?
        Essa relação não pode ser uma função pois não é bem definida.
        Uma relação é <term> bem definida </term> 
        <idx><h>Função bem definida</h></idx>
          <idx><h>Well-defined map</h></idx>
        se cada elemento do domínio está associado a um <em>único</em> elemento
        na imagem.
      </p>

      <p permid="WZf">
        Se <m>f:A \rightarrow B</m> é uma função e a imagem de <m>f</m> é <m>B</m>,
        i.e., <m>f(A) = B</m>, então <m>f</m> é chamada de <term>sobrejetiva</term>
            <idx><h>Função</h><h>sobrejetiva</h></idx>
        Em outras palavras, se existe <m>a \in A</m> para cada <m>b \in B</m> tal que
        <m>f(a) = b</m>, então <m>f</m> sobrejetiva.
        Uma função é injetiva<idx><h>Função</h><h>injetiva</h></idx>
        se <m>a_1 \neq a_2</m> implica <m>f(a_1) \neq f(a_2)</m>.
        Equivalentemente, uma função é injetiva se 
        <m>f(a_1) = f(a_2)</m> implica <m>a_1 = a_2</m>.
        Uma função que é simultaneamente injetiva e sobrejetiva é chamada de
        <term>bijetiva</term>.
            <idx><h>Função</h><h>bijetiva</h></idx>
      </p>
            <!-- Added explanation for onto map - TWJ 1/25/2011 -->
      <example xml:id="example-sets-one-to-one-onto" permid="osC">
        <p permid="kOp">
          Seja <m>f:{\mathbb Z} \rightarrow {\mathbb Q}</m> definida por <m>f(n) = n/1</m>.
          Então <m>f</m> é injetiva mas não sobrejetiva.
          Defina <m>g : {\mathbb Q} \rightarrow {\mathbb Z}</m> como
          <m>g(p/q) = p</m> onde <m>p/q</m> é um número racional com representação
          fracionária irredutível, com denominador positivo. A função <m>g</m>
          é sobrejetiva mas não é injetiva.
        </p>
      </example>

      <p permid="Dgo">
        Dadas duas funções, por vezes é possível construir uma nova função usando a imagem
        da primeira função como o domínio da segunda função. 
        Sejam <m>f : A \rightarrow B</m> e <m>g : B \rightarrow C</m> funções. 
        Defina uma nova função,
        a <term>composição</term><idx><h>Função</h><h>composição de</h></idx> de <m>f</m>
        e <m>g</m> de <m>A</m> para <m>C</m>,por <m>(g \circ f)(x) = g(f(x))</m>.
      </p>

      <figure xml:id="figure-sets-composition" permid="PuG">
        <caption>Composição de funções</caption>
            <!-- Changed the figure to a tikz diagram - TWJ 5/4/2010 -->
        <image width="90%" xml:id="sets-composition" permid="qaY">
          <description>Dois conjuntos, A and B, relacionando 1, 2, 3 para a, b, c e a, b, c para X, Y, Z.  O primeiro mapa, f, envia 1 para b, 2  para c, e 3 para a.  A segunda relação, g, envia
          a e b para Z e c para X.  O mapa inferior, g composto com f, envia 1 e 3 para Z e 2 para X. </description>
            <latex-image>
                <xi:include href="tikz/sets-composition.tex" parse="text"/>
            </latex-image>
        </image>

      </figure>

      <example xml:id="example-sets-composition" permid="UzL">
        <p permid="QVy">
          Considere as funções <m>f: A \rightarrow B</m> e
          <m>g: B \rightarrow C</m> definidas n a<xref ref="figure-sets-composition"/>
          (topo).
          A composição dessas funções,
          <m>g \circ f: A \rightarrow C</m>,
          está definida na <xref ref="figure-sets-composition"/>
          (bottom).
        </p>
      </example>
            <!-- Changed figure references.  Suggested by P. Diethelm.  TWJ 22/4/2013 -->
      <example xml:id="example-sets-composition-noncommute" permid="AGU">
        <p permid="xcH">
          Seja <m>f(x) = x^2</m> e <m>g(x) = 2x + 5</m>.
          Então
          <me permid="EAc">
            (f \circ g)(x) = f(g(x)) = (2x + 5)^2 = 4x^2 + 20x + 25
          </me>
          e
          <me permid="kHl">
            (g \circ f)(x) = g(f(x)) = 2x^2 + 5
          </me>.
          Em geral a ordem faz diferença; isto é, na maior parte dos casos, 
          <m>f \circ g \neq g \circ f</m>.
        </p>
      </example>

      <example xml:id="example-sets-composition-commute" permid="MVm">
        <p permid="djQ">
          Certas vezes pode ocorrer <m>f \circ g= g \circ f</m>.
          Se <m>f(x) = x^3</m> e <m>g(x) = \sqrt[3]{x}</m>.
          Então
          <me permid="QOu">
            (f \circ g )(x) = f(g(x)) = f( \sqrt[3]{x}\, ) = (\sqrt[3]{x}\, )^3 = x
          </me>
          e
          <me permid="wVD">
            (g \circ f )(x) = g(f(x)) = g( x^3) = \sqrt[3]{ x^3} = x
          </me>.
        </p>
      </example>

      <example xml:id="example-sets-linear-map" permid="tcv">
        <p permid="JqZ">
          Dada uma matrix <m>2 \times 2</m>
          <me permid="dcM">
            A =
            \begin{pmatrix}
            a &amp; b \\
            c &amp; d
            \end{pmatrix}
          </me>,
          podemos definir um mapa <m>T_A : {\mathbb R}^2 \rightarrow {\mathbb R}^2</m> por
          <me permid="JjV">
            T_A (x,y) = (ax + by, cx +dy)
          </me>
          para <m>(x,y)</m> em <m>{\mathbb R}^2</m>.
          Na verdade, isso é a multiplicação de matrizes. ou seja, 
          <me permid="pre">
            \begin{pmatrix}
            a &amp; b \\
            c &amp; d
            \end{pmatrix}
            \begin{pmatrix}
            x \\ y
            \end{pmatrix}
            =
            \begin{pmatrix}
            ax + by \\
            cx +dy
            \end{pmatrix}
          </me>.
          Mapas de <m>{\mathbb R}^n</m> para
          <m>{\mathbb R}^m</m> dados por matrizes são chamados de <term>mapas lineares</term>
          ou <term>transformações lineares</term>.
              <idx><h>Transformação linear</h><h>definição de</h></idx>
        </p>
      </example>

      <example xml:id="example-sets-permutation" permid="ZjE">
        <p permid="pyi">
          Suponha que <m>S = \{ 1,2,3  \}</m>.
          Defina uma função <m>\pi :S\rightarrow S</m> dada por
          <me permid="Vyn">
            \pi( 1 )  = 2, \qquad \pi( 2 )  = 1, \qquad \pi( 3 )  = 3
          </me>.
          Essa é uma função bijetiva. Uma forma alternativa de
          denotar <m>\pi</m> é
          <me permid="BFw">
            \begin{pmatrix}
            1 &amp; 2 &amp; 3 \\
            \pi(1) &amp; \pi(2) &amp; \pi(3)
            \end{pmatrix}
            =
            \begin{pmatrix}
            1 &amp; 2 &amp; 3 \\
            2 &amp; 1 &amp; 3
            \end{pmatrix}
          </me>.
          Para todo conjunto <m>S</m>, uma função injetiva e sobrejetiva
          <m>\pi : S \rightarrow S</m> é chamada de 
          <term>permutação</term><idx><h>Permutação</h><h>definição de</h></idx> de <m>S</m>.
        </p>
      </example>

      <theorem permid="PPS">
        <statement>
          <p permid="buD">
            Sejam <m>f : A \rightarrow B</m>,
            <m>g : B \rightarrow C</m>, e <m>h : C \rightarrow D</m>.
            Então

            <ol permid="bnm">
              <li permid="oly">
                <p permid="yYY">
                  A composição de funções é associativa; isto é,                   
                  <m>(h \circ g) \circ f = h \circ (g \circ f)</m>;
                </p>
              </li>

              <li permid="UsH">
                <p permid="fgh">
                  Se <m>f</m> e <m>g</m> são ambas injetivas, então
                   <m>g \circ f</m> é injetiva;
                </p>
              </li>

              <li permid="AzQ">
                <p permid="Lnq">
                  Se <m>f</m> e <m>g</m> são ambas sobrejetivas, então
                  <m>g \circ f</m> é sobrejetiva;
                </p>
              </li>

              <li permid="gGZ">
                <p permid="ruz">
                  Se <m>f</m> and <m>g</m> são bijetivas,
                  então <m>g \circ f</m> também é bijetiva.
                </p>
              </li>
            </ol>
          </p>
        </statement>

        <proof permid="nXd">
          <p permid="epj">
            Provamos (1) e (3).
            Deixamos o item (2) como exercício e o item
             (4) segue diretamente de (2) e (3).
          </p>

          <p permid="Kws">
            (1) Devemos mostrar que
            <me permid="hMF">
              h \circ (g \circ f) = (h \circ g) \circ f
            </me>.
            Para <m>a \in A</m> temos
            <md permid="NTO">
              <mrow>(h \circ (g \circ f))(a) &amp; = h((g \circ f)(a))</mrow>
              <mrow>&amp; = h(g(f(a)))</mrow>
              <mrow>&amp; = (h \circ g)(f(a))</mrow>
              <mrow>&amp; = ((h \circ g) \circ f)(a)</mrow>
            </md>.
          </p>

          <p permid="qDB">
            (3) Assuma que <m>f</m> and <m>g</m> são ambas funções sobrejetivas.
            Dado <m>c \in C</m>, devemos mostrar que existe um <m>a \in A</m> tal que
            <m>(g \circ f)(a) = g(f(a)) = c</m>.
            No entanto, como <m>g</m> is sobrejetiva,
            existe um elemento <m>b \in B</m> tal que <m>g(b) = c</m>.
            Similarmente, existe um <m>a \in A</m> tal que <m>f(a) = b</m>.
            Portanto,
            <me permid="uaX">
              (g \circ f)(a) = g(f(a)) = g(b) = c
            </me>.
          </p>
        </proof>
      </theorem>

      <p permid="jnx">
        Dado <m>S</m> um conjunto qualquer, usaremos <m>id_S</m> ou <m>id</m>
        para denotar a
        <term>função identidade</term>
            <idx><h>Função</h><h>identidade</h></idx>
        de <m>S</m> para si próprio. 
        Definimos esse mapa por <m>id(s) = s</m> para todo <m>s \in S</m>.
        Uma função <m>g: B \rightarrow A</m> é uma
        <term>função inversa</term>
        de <m>f: A \rightarrow B</m> se
        <m>g \circ f = id_A</m> e <m>f \circ g = id_B</m>;
        em outras palavras, a função inversa é a função que simplesmente
        <q>desfaz</q> o que a função inicial.
        Uma função é dita <term>invertível</term><idx><h>Função</h><h>invertível</h></idx>
        se possui uma inversa. Denotamos <m>f^{-1}</m> para a função inversa de <m>f</m>.

        <notation>
          <usage>id</usage>
          <description>função identidade</description>
        </notation>

        <notation>
          <usage>f^{-1}</usage>
          <description>invesa de uma função <m>f</m></description>
        </notation>

      </p>

      <example xml:id="example-sets-inverse-function" permid="FqN">
        <p permid="VFr">
          A função <m>f(x) = x^3</m> tem como inversa
          <m>f^{-1}(x) = \sqrt[3]{x}</m> por <xref ref="example-sets-composition-commute"/>.
        </p>
      </example>

      <example xml:id="example-sets-exponential" permid="lxW">
        <p permid="BMA">
          O logaritmo natural e a função exponencial, 
          <m>f(x) = \ln x</m> e <m>f^{-1}(x) = e^x</m>,
          são mutuamente inversas desde que sejamos cuidados ao 
          escolher os domínios. Observe que
          <me permid="aig">
            f(f^{-1}(x)) = f(e^x) = \ln e^x = x
          </me>
          e
          <me permid="Gpp">
            f^{-1}(f(x)) = f^{-1}(\ln x) = e^{\ln x} = x
          </me>
          sempre que a composição faz sentido
        </p>
      </example>

      <example xml:id="example-sets-inverse-matrix" permid="RFf">
        <p permid="hTJ">
          Suponha que
          <me permid="mwy">
            A =
            \begin{pmatrix}
            3 &amp; 1 \\
            5 &amp; 2
            \end{pmatrix}
          </me>.
          Então <m>A</m> define um mapa de
          <m>{\mathbb R}^2</m> para <m>{\mathbb R}^2</m> dado por
          <me permid="SDH">
            T_A (x,y) = (3x +  y, 5x + 2y)
          </me>.
          Podemos achar uma função inversa de <m>T_A</m> simplesmente
          invertendo a matrix <m>A</m>;
          ou seja, <m>T_A^{-1} = T_{A^{-1}}</m>.
          Nesse exemplo,
          <me permid="yKQ">
            A^{-1} =
            \begin{pmatrix}
            2  &amp; -1 \\
            -5 &amp;  3
            \end{pmatrix};
          </me>
          assim a função inversa é dada por
          <me permid="eRZ">
            T_A^{-1} (x,y) = (2x -  y, -5x + 3y)
          </me>.
          É fácil verificar que 
          <me permid="KZi">
            T^{-1}_A \circ T_A (x,y) = T_A \circ T_A^{-1} (x,y) = (x,y)
          </me>.
          Nem toda função possui uma inversa. Se considerarmos o mapa
          <me permid="rgr">
            T_B (x,y) = (3x , 0 )
          </me>
          dado pela matriz
          <me permid="XnA">
            B =
            \begin{pmatrix}
            3 &amp; 0 \\
            0 &amp; 0
            \end{pmatrix}
          </me>,
          então uma função inversa deveria ter a forma
          <me permid="DuJ">
            T_B^{-1} (x,y) = (ax + by, cx +dy)
          </me>
          e
          <me permid="jBS">
            (x,y) = T_B \circ T_B^{-1} (x,y) = (3ax + 3by, 0)
          </me>
          para qualquer <m>x</m> e <m>y</m>.
          Isso é claramente impossível uma vez que pode não ser  <m>0</m>.
        </p>
      </example>

      <example xml:id="example-sets-inverse-permutation" permid="xMo">
        <p permid="OaS">
          Dada a permutação
          <me permid="PJb">
            \pi =
            \begin{pmatrix}
            1 &amp; 2 &amp; 3 \\
            2 &amp; 3 &amp; 1
            \end{pmatrix}
          </me>
          em <m>S = \{ 1,2,3 \}</m>, é fácil verificar que a permutação dada por
          <me permid="vQk">
            \pi^{-1} =
            \begin{pmatrix}
            1 &amp; 2 &amp; 3 \\
            3 &amp; 1 &amp; 2
            \end{pmatrix}
          </me>
          é a inversa de <m>\pi</m>.
          Na verdade, toda função bijetiva possui uma inversa, como veremos
          no teorema a seguir.
        </p>
      </example>

      <theorem permid="vXb">
        <statement>
          <p permid="HBM">
            Uma função é invertível se e somente se é injetiva e sobrejetiva.
          </p>
        </statement>

        <proof permid="Uem">
          <p permid="WKK">
            Suponha inicialmente que <m>f:A \rightarrow B</m> é invertível com inversa
            <m>g: B \rightarrow A</m>. Então <m>g \circ f = id_A</m> é a função identidade;
            isto é, <m>g(f(a)) = a</m>.
            Se <m>a_1, a_2 \in A</m> com <m>f(a_1) = f(a_2)</m>,
            então <m>a_1 = g(f(a_1)) = g(f(a_2)) = a_2</m>.
            Consequentemente, <m>f</m> é injetiva.
            Suponha agora que <m>b \in B</m>.
            Para verificar que <m>f</m> é sobrejetiva é
            é necessário encontrar um elemento <m>a \in A</m> tal que <m>f(a) = b</m>,
            mas <m>f(g(b)) = b</m> com <m>g(b) \in A</m>.
            Basta portanto tomar <m>a = g(b)</m>.
          </p>

          <p permid="CRT">
            Reciprocamente, seja <m>f</m> bijetiva e tome <m>b \in B</m>.
            Como <m>f</m> é sobrejetiva, existe um <m>a \in A</m> tal que
            <m>f(a) = b</m>. Uma vez que <m>f</m> é injetiva, <m>a</m> deve
            ser único.Defina <m>g</m> tomando <m>g(b) = a</m>.
            Construímos portanto a inversa de <m>f</m>.
          </p>
        </proof>
      </theorem>
    </subsection>

    <subsection xml:id="sets-subsection-equivalence-relations" permid="VFe">
      <title>Relações de Equivalência e Partições</title>
      <p permid="vBP">
        Uma noção fundamental na matemática é a de igualdade. Podemos
        generalizar a igualdade com relações de equivalência e classes de
        equivalência. Uma
        Uma <term>relação de equivalência</term>
            <idx><h>Relação de Equivalência</h></idx>
        em um conjunto <m>X</m> é uma relação <m>R \subset X \times X</m> tal que

        <ul permid="wVq">
          <li permid="yKD">
            <p permid="XBI">
              <m>(x, x) \in R</m> para todo <m>x \in X</m> (<term>propriedade reflexiva</term>);
            </p>
          </li>

          <li permid="eRM">
            <p permid="DIR">
              <m>(x, y) \in R</m> implica
              <m>(y, x) \in R</m> (<term>propriedade simétrica</term>);
            </p>
          </li>

          <li permid="KYV">
            <p permid="jQa">
              <m>(x, y)</m> e <m>(y, z) \in R</m> implicam <m>(x, z) \in R</m>
              (<term>propriedade transitiva</term>).
            </p>
          </li>
        </ul>

        Dada uma relação de equivalência <m>R</m> em um conjunto <m>X</m>,
        escrevemos <m>x \sim y</m> no lugar de <m>(x, y) \in R</m>.
        Se a relação de equivalência já possui uma notação associada, como
        <m>=</m>, <m>\equiv</m> ou <m>\cong</m>, usaremos essa notação.
      </p>

      <example xml:id="example-sets-equivalent-fractions" permid="qhP">
        <p permid="uib">
          Seka, <m>p</m>, <m>q</m>, <m>r</m>,
          e <m>s</m> inteiros, onde <m>q</m> e <m>s</m> são não nulos.
          Defina <m>p/q \sim r/s</m> se <m>ps = qr</m>.
          É fácil ver que <m>\sim</m> é reflexiva e simétrica.
          Para verificar que essa relação é também transitiva suponha que
          <m>p/q \sim r/s</m> e <m>r/s \sim t/u</m>,
          com <m>q</m>, <m>s</m> e <m>u</m> não nulos.
          Então <m>ps = qr</m> e <m>ru = st</m>.
          Portanto,
          <me permid="bXt">
            psu = qru = qst
          </me>.
          Como <m>s \neq 0</m>, <m>pu = qt</m>.
          Consequentemente, <m>p/q \sim t/u</m>.
        </p>
      </example>

      <example xml:id="example-sets-equivalent-derivative" permid="WoY">
        <p permid="apk">
          Suponha que <m>f</m> e <m>g</m> sejam funções diferenciáveis em  <m>{\mathbb R}</m>.
          Definimos uma relação de equivalência para tais funções tomando
          <m>f(x) \sim g(x)</m> se <m>f'(x) = g'(x)</m>.
          É claro que <m>\sim</m> é reflexiva e simétrica.
          Para demonstrar a transitividade suponha que
          <m>f(x) \sim g(x)</m> e <m>g(x) \sim h(x)</m>.
          Do cálculo sabemos que
          <m>f(x) - g(x) = c_1</m> e <m>g(x)- h(x) = c_2</m>,
          onde <m>c_1</m> e <m>c_2</m> são ambos constantes.
          Assim,
          <me permid="IeC">
            f(x) - h(x) = ( f(x) - g(x)) + ( g(x)- h(x)) = c_1 + c_2
          </me>
          e <m>f'(x) - h'(x) = 0</m>.
          Portanto, <m>f(x) \sim h(x)</m>.
        </p>
      </example>

      <example xml:id="example-sets-equivalent-circles" permid="Cwh">
        <p permid="Gwt">
          Para <m>(x_1, y_1 )</m> e
          <m>(x_2, y_2)</m> e <m>{\mathbb R}^2</m>,
          defina <m>(x_1, y_1 ) \sim (x_2, y_2)</m> se <m>x_1^2 + y_1^2 = x_2^2 + y_2^2</m>.
          Então <m>\sim</m> é uma relação de equivalência em <m>{\mathbb R}^2</m>.
        </p>
      </example>

      <example xml:id="example-sets-equivalent-matrices" permid="iDq">
        <p permid="mDC">
          Sejam <m>A</m> e <m>B</m> matrizes 
          <m>2 \times 2</m> com entradas nos reais.
          Podemos definir uma relação de equivalência no conjunto
          das matrizes <m>2 \times 2</m> 
          considerando <m>A \sim B</m> se existe uma matriz invertível
          <m>P</m> tal que <m>PAP^{-1} = B</m>.
          Por exemplo, se
          <me permid="olL">
            A =
            \begin{pmatrix}
            1 &amp; 2 \\
            -1 &amp; 1
            \end{pmatrix}
            \quad \text{e} \quad
            B =
            \begin{pmatrix}
            -18 &amp; 33 \\
            -11 &amp; 20
            \end{pmatrix}
          </me>,
          então <m>A \sim B</m> pois <m>PAP^{-1} = B</m> para
          <me permid="UsU">
            P =
            \begin{pmatrix}
            2 &amp; 5 \\
            1 &amp; 3
            \end{pmatrix}
          </me>.
          Seja <m>I</m> a matriz identidade <m>2 \times 2</m>; ou seja,
          <me permid="AAd">
            I =
            \begin{pmatrix}
            1 &amp; 0 \\
            0 &amp; 1
            \end{pmatrix}
          </me>.
          Então <m>IAI^{-1} = IAI = A</m>;
          logo a relação é reflexiva.
          Para verificar a simetria, suponha que <m>A \sim B</m>.
          Então existe uma matriz invertível <m>P</m> tal que <m>PAP^{-1} = B</m>.
          Assim
          <me permid="gHm">
            A = P^{-1} B P = P^{-1} B (P^{-1})^{-1}
          </me>.
          Finalmente, suponha que <m>A \sim B</m> e <m>B \sim C</m>.
          Então existem matrizes invertíveis <m>P</m> e <m>Q</m> tais que
          <m>PAP^{-1} = B</m> e <m>QBQ^{-1} = C</m>.
          Como
          <me permid="MOv">
            C = QBQ^{-1} = QPAP^{-1} Q^{-1} = (QP)A(QP)^{-1}
          </me>,
          a relação é transitiva.
          Duas matrizes equivalentes dessa forma são ditas <term>similares</term>.
              <idx><h>Matriz</h><h>similar</h></idx>
        </p>
      </example>

      <p permid="bIY">
        Uma <term>partição</term>
            <idx><h>Partições</h></idx>
        <m>{\mathcal P}</m> de um conjunto <m>X</m> é uma coleção de conjuntos
        não vazios <m>X_1, X_2, \ldots</m> tais que <m>X_i \cap X_j = \emptyset</m> para
        <m>i \neq j</m> e <m>\bigcup_k X_k = X</m>.
        Seja <m>\sim</m> uma relação de equivalência em um conjunto <m>X</m> e tome <m>x \in X</m>.
        Então <m>[x] = \{ y \in X : y \sim x \}</m> é chamado de 
        <term>classe de equivalência</term>
            <idx><h>Classe de equivalência</h></idx>
        de <m>x</m>, também encontramos a notação <m>\overline{x}</m> para a classe
        de equivalência de <m>x</m>.
        Veremos que uma relação de equivalência induz uma partição via suas
        classes de equivalência. Ademais, sempre que uma partição em
        um conjunto é dada, existe uma relação de equivalência subjacente
        como o teorema a seguir demonstra.
      </p>

      <theorem permid="dTx">
        <statement>
          <p permid="nIV">
            Dada uma relação de equivalência <m>\sim</m> em um conjunto <m>X</m>,
            as classes de equivalência de <m>X</m> formam uma partição de <m>X</m>.
            Reciprocamente, se <m>{\mathcal P} = \{ X_i\}</m> é uma partição
            de um conjunto <m>X</m>, então existe uma relação de equivalência
            em <m>X</m> com classes de equivalência <m>X_i</m>.
          </p>
        </statement>

        <proof permid="Alv">
          <p permid="iZc">
            Suponha que uma relação de equivalência <m>\sim</m> no conjunto <m>X</m>.
            Para qualquer <m>x \in X</m>, a propriedade reflexiva mostra que
            <m>x \in [x]</m> portanto <m>[x]</m> é não vazio.
            Claramente temos <m>X = \bigcup_{x \in X} [x]</m>.
            Considere agora <m>x, y \in X</m>. Precisamos
            mostrar que ou <m>[x] = [y]</m> ou <m>[x] \cap [y] = \emptyset</m>.
            Suponha que a interseção entre <m>[x]</m> e <m>[y]</m>
            não seja vazia e tome <m>z \in [x] \cap [y]</m>.
            Então <m>z \sim x</m> e <m>z \sim y</m>.
            Por simetria e transitividade <m>x \sim y</m>;
            portanto, <m>[x] \subset [y]</m>.
            De forma similar, <m>[y] \subset [x]</m> e portanto <m>[x] = [y]</m>.
            Assim, duas classes de equivalência são disjuntas ou
            exatamente iguais.
          </p>

          <p permid="Pgl">
            Reciprocamente, suponha que <m>{\mathcal P} = \{X_i\}</m>
            é uma partição de um conjunto <m>X</m>.
            Considere dois elementos equivalentes se eles pertencem 
            a mesma partição.
            Claramente, a relação é reflexiva.
            Se <m>x</m> pertence ao mesmo subconjunto de <m>y</m>,
            digamos  <m>X_i</m>, então obviamente <m>y</m> também
            pertence ao mesmo subconjunto <m>X_i</m> de <m>x</m>.
            Finalmente, se <m>x</m> está no mesmo subconjunto <m>X_i</m> de
            <m>y</m> e <m>y</m> está no mesmo subconjunto <m>X_j</m> de
            <m>z</m>, sendo as partições disjuntas ou iguais, temos
            que <m>X_i = X_j</m>, logo <m>x</m> e <m>z</m>
            estão no mesmo subconjunto e, portanto, a transitividade
            vale.
          </p>
        </proof>
      </theorem>

      <corollary permid="KaG">
        <statement>
          <p permid="zXn">
            Duas classes de equivalência de uma relação de equivalência
            são ou disjuntas ou iguais.
          </p>
        </statement>
      </corollary>

      <p permid="HQh">
        Examinemos algumas das partições dadas pelas relações de equivalência no
        último conjunto de exemplos.
      </p>

      <example xml:id="example-sets-fraction-partition" permid="OKz">
        <p permid="SKL">
          Na relação de equivalência em <xref ref="example-sets-equivalent-fractions"/>,
          dois pares de inteiros, <m>(p,q)</m> and <m>(r,s)</m>,
          estão na mesma classe de equivalência quando eles
          representam a mesma fração.
        </p>
      </example>

      <example xml:id="example-sets-matrix-partition" permid="uRI">
        <p permid="yRU">
          Na relação de equivalência em  <xref ref="example-sets-equivalent-derivative"/>,
          duas funções <m>f(x)</m> e <m>g(x)</m> 
          estão na mesma classe de equivalência quando diferem por uma constante.
        </p>
      </example>

      <example xml:id="example-sets-circle-partition" permid="aYR">
        <p permid="eZd">
          Definimos uma relação de equivalência em <m>{\mathbb R}^2</m> como
          <m>(x_1, y_1 ) \sim (x_2, y_2)</m> se <m>x_1^2 + y_1^2 = x_2^2 + y_2^2</m>.
          Dois pares de números reais estão no mesmo subconjunto da partição 
          quando eles pertencem ao mesmo círculo centrado na origem.
        </p>
      </example>

      <example xml:id="example-sets-congruent-integers" permid="Hga">
        <p permid="Lgm">
          Sejam <m>r</m> e <m>s</m> inteiros e suponha que  <m>n \in {\mathbb N}</m>.
          Dizemos que <m>r</m> é <term>congruente</term><idx><h>Congruencia módulo <m>n</m></h></idx>
          a <m>s</m>  <term>módulo</term> <m>n</m>,
          ou <m>r</m> é congruente a  <m>s</m> mod <m>n</m>,
          se <m>r - s</m> divisível por <m>n</m>;
          isto é, <m>r - s = nk</m> para algum <m>k \in {\mathbb Z}</m>.
          nesse caso escrevemos <m>r \equiv s \pmod{n}</m>.

          <notation>
            <usage>a \equiv b \pmod{n}</usage>
            <description><m>a</m> é congruente a <m>b</m> módulo <m>n</m></description>
          </notation>

          Por exemplo, <m>41 \equiv 17 \pmod{ 8}</m> pois
          <m>41 - 17=24</m> é divisível por <m>8</m>.
          Afirmamos que a congruência módulo <m>n</m>
          define uma relação de equivalência para <m>{\mathbb Z}</m>.
          Certamente todo inteiro <m>r</m> é equivalente a si mesmo uma vez que
          <m>r - r = 0</m> é divisível por <m>n</m>.
          Mostremos que essa relação é simétrica.
          Se <m>r \equiv s \pmod{ n}</m>,
          então <m>r - s = -(s -r)</m> é divisível por <m>n</m>.
          Assim <m>s - r</m> é divisível por <m>n</m> e <m>s \equiv r \pmod{ n}</m>.
          Agora suponha que <m>r \equiv s \pmod{ n}</m> e <m>s \equiv t \pmod{ n}</m>.
          Então existem inteiros <m>k</m> e <m>l</m> tais que
          <m>r -s = kn</m> e <m>s - t = ln</m>.
          Para mostrar a transitividade é necessário verificar que
          <m>r - t</m> é divisível por <m>n</m>.
          De fato,
          <me permid="sVE">
            r - t = r - s + s - t = kn + ln = (k + l)n
          </me>,
          portanto <m>r - t</m> é divisível por <m>n</m>.
        </p>

        <p permid="rnv">
          Se considerarmos a relação de equivalência dada pelos módulo <m>3</m>, então
          <md permid="ZcN">
            <mrow>{[0]} &amp; = \{ \ldots, -3, 0, 3, 6, \ldots \},</mrow>
            <mrow>{[1]} &amp; = \{ \ldots, -2, 1, 4, 7, \ldots \},</mrow>
            <mrow>{[2]} &amp; = \{ \ldots, -1, 2, 5, 8, \ldots \}</mrow>
          </md>.
          Observe que <m>[0] \cup [1] \cup [2] = {\mathbb Z}</m> e que tais
          conjuntos são disjuntos.
          Os conjuntos <m>[0]</m>, <m>[1]</m>,
          e <m>[2]</m> definem uma partição dos inteiros.
        </p>

        <p permid="XuE">
          Os inteiros módulo <m>n</m> formam um importante exemplo 
          no estudo de álgebra abstrata e se mostrará bastante útil na
          nossa exploração das diversas estruturas algébricas, como grupos e aneis.
          Em nossa discussão sobre os inteiros módulo <m>n</m>
          assumimos um resultado conhecido como algoritmo da divisão, esse
          resultado será enunciado e provado em <xref ref="integers"/>.
        </p>
      </example>
    </subsection>

  </section>

  <reading-questions permid="ibN">

    <exercise permid="Kix">
      <statement>
        <p permid="OSq">
          O que relações e funções tem em comum?
        </p>
      </statement>
    </exercise>

    <exercise permid="qpG">
      <statement>
        <p permid="uZz">
          O que diferencia relações e funções?
        </p>
      </statement>
    </exercise>

    <exercise permid="WwP">
      <statement>
        <p permid="bgI">
          Enuncie cuidadosamente as três propriedades que definem uma relação
          de equivalência. Em outras palavras, não apenas as nomeie, 
          e sim apresente as respectivas definições.
        </p>
      </statement>
    </exercise>

    <exercise permid="CDY">
      <statement>
        <p permid="HnR">
          Qual é a importância das relações de equivalências? (Dica: Partições)
          What is the big deal about equivalence relations? (Hint: Partitions.)
        </p>
      </statement>
    </exercise>

    <exercise permid="iLh">
      <statement>
        <p permid="nva">
          Descreva uma técanica geral para provar que dois conjuntos
          são iguais.
        </p>
      </statement>
    </exercise>

  </reading-questions>
    <!-- Exercises with Solutions  -->
    <!-- File: sets.xml  -->
    <!-- Title: Preliminaries -->
  <exercises xml:id="exercises-sets" filenamebase="sets" permid="mDp">
    <title>Exercícios</title>
    <exercise number="1" permid="nnj" xml:id="sets-exercise-set-operations">
      <statement>
        <p permid="AHh">
          Suponha que
          <md permid="FjW">
            <mrow>A &amp; = \{ x : x \in \mathbb N \text{ e } x \text{ é par} \},</mrow>
            <mrow>B &amp; = \{x : x \in \mathbb N \text{ e } x \text{ é primo}\},</mrow>
            <mrow>C &amp; = \{ x : x \in \mathbb N \text{ e } x \text{ é um múltiplo de  } 5\}</mrow>
          </md>.
          Descreva os conjuntos a seguir.

          <ol cols="2" permid="TIN">
            <li permid="MOi">
              <p permid="PXj">
                <m>A \cap B</m>
              </p>
            </li>

            <li permid="sVr">
              <p permid="wes">
                <m>B \cap C</m>
              </p>
            </li>

            <li permid="ZcA">
              <p permid="clB">
                <m>A \cup B</m>
              </p>
            </li>

            <li permid="FjJ">
              <p permid="IsK">
                <m>A \cap (B \cup C)</m>
              </p>
            </li>
          </ol>
        </p>
      </statement>
      <hint permid="sGW">
        <p permid="rIU">
          (a) <m>A \cap B = \{ 2 \}</m>; (b) <m>B \cap C = \{ 5 \}</m>.
        </p>
      </hint>
    </exercise>

    <exercise number="2" permid="Tus" xml:id="sets-exercise-set-operations-empty-set">
      <statement>
        <p permid="gOq">
          Se <m>A = \{ a, b, c \}</m>,
          <m>B = \{ 1, 2, 3 \}</m>, <m>C = \{ x \}</m>, e <m>D = \emptyset</m>,
          liste todos os elementos em cada um dos conjuntos.

          <ol cols="2" permid="zPW">
            <li permid="JTC">
              <p permid="NcD">
                <m>A \times B</m>
              </p>
            </li>

            <li permid="qaL">
              <p permid="tjM">
                <m>B \times A</m>
              </p>
            </li>

            <li permid="WhU">
              <p permid="ZqV">
                <m>A \times B \times C</m>
              </p>
            </li>

            <li permid="Cpd">
              <p permid="Fye">
                <m>A \times D</m>
              </p>
            </li>
          </ol>
        </p>
      </statement>
      <hint permid="EVo">
        <p permid="XQd">
          (a) <m>A \times B = \{ (a,1), (a,2), (a,3), (b,1), (b,2), (b,3), (c,1), (c,2), (c,3) \}</m>; (d) <m>A \times D = \emptyset</m>.
        </p>
      </hint>
    </exercise>

    <exercise number="3" permid="zBB" xml:id="sets-exercise-cartesian-product-nonempty-set">
      <statement>
        <p permid="MVz">
          Encontre um exemplo de dois conjuntos não vazios <m>A</m> e <m>B</m> para os quais
           <m>A \times B = B \times A</m> é verdadeiro.
        </p>
      </statement>
    </exercise>

    <exercise number="4" permid="fIK" xml:id="sets-exercise-union-intersect-empty-set">
      <statement>
        <p permid="tcI">
          Prove que <m>A \cup \emptyset = A</m> e <m>A \cap \emptyset = \emptyset</m>.
        </p>
      </statement>
    </exercise>

    <exercise number="5" permid="LPT" xml:id="sets-exercise-union-intersection-commute">
      <statement>
        <p permid="ZjR">
          Prove que <m>A \cup B = B \cup A</m> e <m>A \cap B = B \cap A</m>.
        </p>
      </statement>
    </exercise>

    <exercise number="6" permid="rXc" xml:id="sets-exercise-union-distributes">
      <statement>
        <p permid="Fra">
          Prove que <m>A \cup (B \cap C) = (A \cup B) \cap (A \cup C)</m>.
        </p>
      </statement>
      <hint permid="JFh">
        <p permid="DXm">
          Observe que <m>x \in A \cup B</m> se e somente se <m>x \in A</m> ou <m>x \in B</m>.
          Equivalentemente, <m>x \in B</m> ou <m>x \in A</m>,
          o que é o mesmo que <m>x \in B \cup A</m>.
          Portanto, <m>A \cup B = B \cup A</m>.
        </p>
      </hint>
    </exercise>

    <exercise number="7" permid="Yel" xml:id="sets-exercise-intersection-distributes">
      <statement>
        <p permid="lyj">
          Prove que <m>A \cap (B \cup C) = (A \cap B) \cup (A \cap C)</m>.
        </p>
      </statement>
    </exercise>

    <exercise number="8" permid="Elu" xml:id="sets-exercise-subset-iff-intersection">
      <statement>
        <p permid="RFs">
          Prove que <m>A \subset B</m> se e somente se <m>A \cap B = A</m>.
        </p>
      </statement>
    </exercise>

    <exercise number="9" permid="ksD" xml:id="sets-exercise-demorgan">
      <statement>
        <p permid="xMB">
          Prove que <m>(A \cap B)' = A' \cup B'</m>.
        </p>
      </statement>
    </exercise>

    <exercise number="10" permid="QzM" xml:id="sets-exercise-set-minus-union">
      <statement>
        <p permid="dTK">
          Prove que <m>A \cup B = (A \cap B) \cup (A \setminus B) \cup (B \setminus A)</m>.
        </p>
      </statement>
      <hint permid="Opa">
        <p permid="kev">
          <m>(A \cap B) \cup (A \setminus B) \cup (B \setminus A) = (A \cap B) \cup (A \cap B') \cup (B \cap A') = [A \cap (B \cup B')] \cup (B \cap A') = A \cup (B \cap A') = (A \cup B) \cap (A \cup A') = A \cup B</m>.
        </p>
      </hint>
    </exercise>

    <exercise number="11" permid="wGV" xml:id="sets-exercise-times-union">
      <statement>
        <p permid="KaT">
          Prove que <m>(A \cup B) \times C = (A \times C ) \cup (B \times C)</m>.
        </p>
      </statement>
    </exercise>

    <exercise number="12" permid="cOe" xml:id="sets-exercise-set-minus-empty-set">
      <statement>
        <p permid="qic">
          Prove que <m>(A \cap B) \setminus B = \emptyset</m>.
        </p>
      </statement>
    </exercise>

    <exercise number="13" permid="IVn" xml:id="sets-exercise-union-set-minus">
      <statement>
        <p permid="Wpl">
          Prove que <m>(A \cup B) \setminus B = A \setminus B</m>.
        </p>
      </statement>
    </exercise>

    <exercise number="14" permid="pcw" xml:id="sets-exercise-set-minus-distribute">
      <statement>
        <p permid="Cwu">
          Prove que <m>A \setminus (B \cup C) = (A \setminus B) \cap (A \setminus C)</m>.
        </p>
      </statement>
      <hint permid="SYT">
        <p permid="QlE">
          <m>A \setminus (B \cup C) = A \cap (B \cup C)' = (A \cap A) \cap (B' \cap C') = (A \cap B') \cap (A \cap C') = (A \setminus B) \cap (A \setminus C)</m>.
        </p>
      </hint>
    </exercise>

    <exercise number="15" permid="VjF" xml:id="sets-exercise-a-cap-b-setminus-c">
      <statement>
        <p permid="iDD">
          Prove que <m>A \cap (B \setminus C) = (A \cap B) \setminus (A \cap C)</m>.
        </p>
      </statement>
    </exercise>

    <exercise number="16" permid="BqO" xml:id="sets-exercise-a-csetminus-b-cup-b-setminus-a">
      <statement>
        <p permid="OKM">
          Prove que <m>(A \setminus B) \cup (B \setminus A) = (A \cup B) \setminus (A \cap B)</m>.
        </p>
      </statement>
    </exercise>

    <exercise number="17" permid="hxX" xml:id="sets-exercise-which-are-maps">
      <statement>
        <p permid="uRV">
          Qual das relações <m>f: {\mathbb Q} \rightarrow {\mathbb Q}</m> a seguir
          define uma função?
          Em cada caso, forneça uma razão pela qual <m>f</m>
          é ou não uma função.

          <ol cols="2" permid="fXf">
            <li permid="GYW">
              <p permid="KhX">
                <m>\displaystyle f(p/q) = \frac{p+ 1}{p - 2}</m>
              </p>
            </li>

            <li permid="ngf">
              <p permid="qpg">
                <m>\displaystyle f(p/q) = \frac{3p}{3q}</m>
              </p>
            </li>

            <li permid="Tno">
              <p permid="Wwp">
                <m>\displaystyle f(p/q) = \frac{p+q}{q^2}</m>
              </p>
            </li>

            <li permid="zux">
              <p permid="CDy">
                <m>\displaystyle f(p/q) = \frac{3 p^2}{7 q^2} - \frac{p}{q}</m>
              </p>
            </li>
          </ol>
        </p>
      </statement>
      <hint permid="rBD">
        <p permid="wsN">
          (a) Não é uma função pois <m>f(2/3)</m> não está definida; (b) é função; (c) não
          é função, uma vez que <m>f(1/2) = 3/4</m> mas <m>f(2/4)=3/8</m>; (d) é função.
        </p>
      </hint>
    </exercise>

    <exercise number="18" permid="NFg" xml:id="sets-exercise-which-are-one-to-one-onto">
      <statement>
        <p permid="aZe">
          Determine quais das funções a seguir são injetivas e quais são sobrejetivas.
          Se a função não for sobrejetiva determine sua imagem.

          <ol permid="Meo">
            <li permid="fBG">
              <p permid="iKH">
                <m>f: {\mathbb R} \rightarrow {\mathbb R}</m> definida por <m>f(x) = e^x</m>
              </p>
            </li>

            <li permid="LIP">
              <p permid="ORQ">
                <m>f: {\mathbb Z} \rightarrow {\mathbb Z}</m> definida por <m>f(n) = n^2 + 3</m>
              </p>
            </li>

            <li permid="rPY">
              <p permid="uYZ">
                <m>f: {\mathbb R} \rightarrow {\mathbb R}</m> definida por<m>f(x) = \sin x</m>
              </p>
            </li>

            <li permid="XXh">
              <p permid="bgi">
                <m>f: {\mathbb Z} \rightarrow {\mathbb Z}</m> definida por <m>f(x) = x^2</m>
              </p>
            </li>
          </ol>
        </p>
      </statement>
      <hint permid="DPV">
        <p permid="czW">
          (a) <m>f</m> é injetiva mas não sobrejetiva.
          <m>f({\mathbb R} ) = \{ x \in {\mathbb R} : x \gt 0 \}</m>. (c) <m>f</m> 
          não é injetiva nem sobrejetiva. <m>f(\mathbb R) = \{ x : -1 \leq x \leq 1 \}</m>.
        </p>
      </hint>
    </exercise>

    <exercise number="19" permid="tMp" xml:id="sets-exercise-inverse-composition">
      <statement>
        <p permid="Hgn">
          Sejam <m>f :A \rightarrow B</m> and
          <m>g : B \rightarrow C</m> funções invertíveis;
          ou seja, funções para as quais <m>f^{-1}</m> e <m>g^{-1}</m> existem.
          Mostre que <m>(g \circ f)^{-1} =f^{-1} \circ g^{-1}</m>.
        </p>
      </statement>
    </exercise>

    <exercise number="20" permid="ZTy" xml:id="sets-exercise-functions-N-to-N">
      <statement>
        <p permid="nnw">
          <ol permid="slx">
            <li permid="Eeq">
              <p permid="Hnr">
                Defina uma função <m>f: {\mathbb N} \rightarrow {\mathbb N}</m>
                que é injetiva mas não sobrejetiva.
              </p>
            </li>

            <li permid="klz">
              <p permid="nuA">
                Defina uma função <m>f: {\mathbb N} \rightarrow {\mathbb N}</m>
                que é sobrejetiva mas não injetiva.
              </p>
            </li>
          </ol>
        </p>
      </statement>
      <hint permid="wlw">
        <p permid="IHf">
          (a) <m>f(n) = n + 1</m>.
        </p>
      </hint>
    </exercise>

    <exercise number="21" permid="GaH" xml:id="sets-exercise-relation-on-circles">
      <statement>
        <p permid="TuF">
          Prove que a relação definida em 
          <m>{\mathbb R}^2</m> por <m>(x_1, y_1 ) \sim (x_2, y_2)</m> se
          <m>x_1^2 + y_1^2 = x_2^2 + y_2^2</m> é uma relação de equivalência.
        </p>
      </statement>
    </exercise>

    <exercise number="22" permid="mhQ" xml:id="sets-exercise-bijective-surjective-compostion">
      <statement>
        <p permid="zBO">
          Sejam <m>f : A \rightarrow B</m> e <m>g : B \rightarrow C</m> funções.

          <ol permid="YsG">
            <li permid="QsI">
              <p permid="TBJ">
                Se <m>f</m> e <m>g</m> são injetivas, 
                mostre que <m>g \circ f</m> é injetiva.
              </p>
            </li>

            <li permid="wzR">
              <p permid="zIS">
                Se <m>g \circ f</m> é sbrejetiva, mostre que <m>g</m> é sobrejetiva.
              </p>
            </li>

            <li permid="cHa">
              <p permid="fQb">
                Se <m>g \circ f</m> é injetiva,
                mostre que <m>f</m> é injetiva.
              </p>
            </li>

            <li permid="IOj">
              <p permid="LXk">
                Se <m>g \circ f</m> é injetiva e <m>f</m> é sobrejetiva,
                mostre que <m>g</m> é injetiva.
              </p>
            </li>

            <li permid="oVs">
              <p permid="set">
                Se <m>g \circ f</m> é sobrejetiva e <m>g</m> é injetiva,
                mostre que <m>f</m> é sobrejetiva.
              </p>
            </li>
          </ol>
        </p>
      </statement>
      <hint permid="oGX">
        <p permid="oOo">
          (a) Sejam <m>x, y \in A</m>.
          Então <m>g(f(x)) = (g \circ f)(x) = (g \circ f)(y) = g(f(y))</m>.
          logo, <m>f(x) = f(y)</m> e <m>x = y</m>,
          assim, <m>g \circ f</m> é injetiva. (b) Seja <m>c \in C</m>,
          então <m>c = (g \circ f)(x) = g(f(x))</m> par algum <m>x \in A</m>.
          Como <m>f(x) \in B</m>, concluímos que <m>g</m> é sobrejetiva.
        </p>
      </hint>
    </exercise>

    <exercise number="23" permid="SoZ"  xml:id="sets-exercise-inverse-rational-function">
      <statement>
        <p permid="fIX">
          Defina uma função nos números reais por
          <me permid="Ryo">
            f(x) = \frac{x + 1}{x - 1}
          </me>.
          Qual é o domínio e a imagem de <m>f</m>?
          Qual é a inversa de <m>f</m>?
          Calcule <m>f \circ f^{-1}</m> e <m>f^{-1} \circ f</m>.
        </p>
      </statement>
      <hint permid="AVp">
        <p permid="UVx">
          <m>f^{-1}(x) = (x+1)/(x-1)</m>.
        </p>
      </hint>
    </exercise>

    <exercise number="24" permid="ywi" xml:id="sets-exercise-maps-set-operations">
      <statement>
        <p permid="LQg">
          Sejam <m>f: X \rightarrow Y</m> uma função e
          <m>A_1, A_2 \subset X</m> e <m>B_1, B_2 \subset Y</m>.

          <ol permid="EzP">
            <li permid="ZMu">
              <p permid="cVv">
                Prove qie <m>f( A_1 \cup A_2 ) = f( A_1) \cup f( A_2 )</m>.
              </p>
            </li>

            <li permid="FTD">
              <p permid="JcE">
                Prove que <m>f( A_1 \cap A_2 ) \subset f( A_1) \cap f( A_2 )</m>.
                Exiba um exemplo onde a igualdade falha.
              </p>
            </li>

            <li permid="maM">
              <p permid="pjN">
                Prove que <m>f^{-1}( B_1 \cup B_2 ) = f^{-1}( B_1) \cup f^{-1}(B_2 )</m>, onde
                <me permid="xFx">
                  f^{-1}(B) = \{ x \in X : f(x) \in B \}
                </me>.
              </p>
            </li>

            <li permid="ShV">
              <p permid="VqW">
                Prove que <m>f^{-1}( B_1 \cap B_2 ) = f^{-1}( B_1) \cap f^{-1}( B_2 )</m>.
              </p>
            </li>

            <li permid="ype">
              <p permid="Byf">
                Prove que <m>f^{-1}( Y \setminus B_1 ) = X \setminus f^{-1}( B_1)</m>.
              </p>
            </li>
          </ol>
        </p>
      </statement>
      <hint permid="NjH">
        <p permid="BcG">
          (a) Seja <m>y \in f(A_1 \cup A_2)</m>.
          Então existe um <m>x \in A_1 \cup A_2</m> tal que <m>f(x) = y</m>.
          Assim, <m> y \in f(A_1)</m> or <m>f(A_2) </m>.
          Portanto, <m> y \in f(A_1) \cup f(A_2)</m>.
          Consequentemente,
          <m> f(A_1 \cup A_2) \subset f(A_1) \cup f(A_2)</m>.
          Reciprocamente, se <m>y \in f(A_1) \cup f(A_2)</m>,
          então <m> y \in f(A_1)</m> ou <m>f(A_2)</m>.
          Assim, existe um <m>x</m> em <m>A_1</m> ou <m>A_2</m> tal que <m>f(x) = y</m>.
          Logo, existe um <m>x \in A_1 \cup A_2</m> tal que <m>f(x) = y</m>.
          Portanto, <m> f(A_1) \cup f(A_2) \subset f(A_1 \cup A_2)</m>,
          e <m>f(A_1 \cup A_2) = f(A_1) \cup f(A_2)</m>.
        </p>
      </hint>
    </exercise>

    <exercise number="25" permid="eDr" xml:id="sets-exercise-determine-equivalence-relations">
      <statement>
        <p permid="rXp">
          Determine se as relações a seguir são relações de equivalência
          nos conjuntos dados.
          Caso afirmativo, descreva a partição induzida. Caso negativo
          mostre o motivo pelo qual a relação não é de equivalência.

          <ol cols="2" permid="kGY">
            <li permid="jgg">
              <p permid="mph">
                <m>x \sim y</m> in <m>{\mathbb R}</m> se <m>x \geq y</m>
              </p>
            </li>

            <li permid="Pnp">
              <p permid="Swq">
                <m>m \sim n</m> in <m>{\mathbb Z}</m> se <m>mn &gt; 0</m>
              </p>
            </li>

            <li permid="vuy">
              <p permid="yDz">
                <m>x \sim y</m> in <m>{\mathbb R}</m> se <m>|x - y| \leq 4</m>
              </p>
            </li>

            <li permid="bBH">
              <p permid="eKI">
                <m>m \sim n</m> in <m>{\mathbb Z}</m> se <m>m \equiv n \pmod{6}</m>
              </p>
            </li>
          </ol>
        </p>
      </statement>
      <hint permid="ZxZ">
        <p permid="hjP">
          (a) A relação falha em ser simétrica. (b) A relação não é reflexiva
          pois <m>0</m> não é equivalente a si mesmo. (c) A relação não é transitiva.
        </p>
      </hint>
    </exercise>

    <exercise number="26" permid="KKA" xml:id="sets-exercise-nonsymmetric-circle">
      <statement>
        <p permid="Yey">
          Defina uma relação <m>\sim</m> em <m>{\mathbb R}^2</m> considerando
          <m>(a, b) \sim (c, d)</m> se e somente <m>a^2 + b^2 \leq c^2 + d^2</m>.
          Mostre que <m>\sim</m> é reflexiva e transitiva mas não é simétrica.
        </p>
      </statement>
    </exercise>

    <exercise number="27" permid="qRJ" xml:id="sets-exercise-matrix-mult-well-defined">
      <statement>
        <p permid="ElH">
          Mostre que uma matrix <m>m \times n</m> induz uma função bem definida de
          <m>{\mathbb R}^n</m> em <m>{\mathbb R}^m</m>.
        </p>
      </statement>
    </exercise>

    <exercise number="28" permid="WYS" xml:id="sets-exercise-reflexive-error">
      <statement>
        <p permid="ksQ">
          Encontre o erro no seguinte argumento exibindo um contra-exemplo.
          
          <q>A propriedade reflexiva é redundante nos axiomas
            de relação de equivalência.
          Se <m>x \sim y</m>, então <m>y \sim x</m> pela propriedade de simetria.
          Usando a transitividade podemos deduzir que <m>x \sim x</m>.</q>
        </p>
      </statement>
      <hint permid="yaJ">
        <p permid="NqY">
          Seja <m>X = {\mathbb N} \cup \{ \sqrt{2}\, \}</m> e defina
          <m>x \sim y</m> se <m>x + y \in {\mathbb N}</m>.
        </p>
      </hint>
    </exercise>

    <exercise number="29" permid="Dgb" xml:id="sets-exercise-projective-real-line">
      <title>Reta Projetiva Real</title>
      <statement>
        <p permid="QzZ">
          Defina uma relação de equivalência em <m>{\mathbb R}^2 \setminus \{ (0,0) \}</m>
          tomando <m>(x_1, y_1) \sim (x_2, y_2)</m> se existe um número
          real não nulo <m>\lambda</m> tal que <m>(x_1, y_1) = ( \lambda x_2, \lambda y_2)</m>.
          Prove que <m>\sim</m> define uma relação de equivalência em 
          <m>{\mathbb R}^2 \setminus (0,0)</m>. Quais são as classes de equivalência
          correspondentes?
          Essa relação de equivalência define a reta projetiva, denotada por
          <m>{\mathbb P}({\mathbb R}) </m>, que é muito importante na geometria.
        </p>
      </statement>
    </exercise>

  </exercises>
  <!--Todo Figure out how to include comments in front of the list of references-->

  <references xml:id="sets-references" permid="ztb">
    <title>Referências e Leituras Sugeridas</title>
        <!--
    <p>The following list contains references suitable for further reading.  With the exception of [8] and [9] and perhaps [1] and [3], all of these books are more or less  at the same level as this text.  Interesting applications of algebra  can be found in [2], [5], [10], and [11].</p>
-->
    <biblio type="raw" permid="fAk">
<!-- was [1] --><!-- Reference updated 5/4/2010 - TWJ -->
      Artin, M.
      <title>Algebra (Classic Version)</title>. 2nd ed. Pearson, Upper Saddle River, NJ, 2018.
    </biblio>

    <biblio type="raw" permid="LHt">
<!-- was [2] --><!-- Reference updated 5/4/2010 - TWJ -->
      Childs, L.
      <title>A Concrete Introduction to Higher Algebra</title>. 2nd ed. Springer-Verlag, New York, 1995.
    </biblio>

    <biblio type="raw" permid="rOC">
<!-- was [3] --><!-- Reference updated 5/4/2010 - TWJ -->
      Dummit, D. and Foote, R.
      <title>Abstract Algebra</title>. 3rd ed. Wiley, New York, 2003.
    </biblio>

    <biblio type="raw" permid="XVL">
<!-- was [2] --><!--Seems to be out of print 5/4/2010 - TWJ -->
      Ehrlich, G.
      <title>Fundamental Concepts of Algebra</title>. PWS-KENT, Boston, 1991.
    </biblio>

    <biblio type="raw" permid="EcU">
<!-- was [4] --><!-- Reference updated 5/4/2010 - TWJ -->
      Fraleigh, J. B.
      <title>A First Course in Abstract Algebra</title>. 7th ed. Pearson, Upper Saddle River, NJ, 2003.
    </biblio>

    <biblio type="raw" permid="kkd">
<!-- was [5] --><!-- Reference updated 5/4/2010 - TWJ -->
      Gallian, J. A.
      <title>Contemporary Abstract Algebra</title>. 7th ed. Brooks/Cole, Belmont, CA, 2009.
    </biblio>

    <biblio type="raw" permid="Qrm">
<!-- was [6] --><!-- I believe that this is not still in print, but it is certainly available through amazon.com 5/4/2010 - TWJ -->
      Halmos, P.
      <title>Naive Set Theory</title>.  Springer, New York, 1991. One of the best references for set theory.
    </biblio>

    <biblio type="raw" permid="wyv">
<!-- was [7] --><!-- Reference updated 5/4/2010 - TWJ -->
      Herstein, I. N.
      <title>Abstract Algebra</title>. 3rd ed. Wiley, New York, 1996.
    </biblio>

    <biblio type="raw" permid="cFE">
<!-- was [8] --><!-- Reference updated 5/4/2010 - TWJ -->
      Hungerford, T. W.
      <title>Algebra</title>. Springer, New York, 1974. One
      of the standard graduate algebra texts.
    </biblio>

    <biblio type="raw" permid="IMN">
<!-- was [9] --><!-- Reference updated 5/4/2010 - TWJ -->
      Lang, S.
      <title>Algebra</title>. 3rd ed. Springer, New York, 2002.
      Another standard graduate text.
    </biblio>

    <biblio type="raw" permid="oTW">
<!-- was [10] --><!-- Reference updated 5/4/2010 - TWJ -->
      Lidl, R. and Pilz, G.
      <title>Applied Abstract Algebra</title>. 2nd ed. Springer,
      New York, 1998.
    </biblio>

    <biblio type="raw" permid="Vbf">
<!-- was [11] --><!-- No longer in print 5/4/2010 - TWJ -->
      Mackiw, G.
      <title>Applications of Abstract Algebra</title>. Wiley, New York,
      1985.
    </biblio>

    <biblio type="raw" permid="Bio">
<!-- was [12] -->
      Nickelson, W. K. <!-- Reference updated 5/4/2010 - TWJ -->
      <title>Introduction to Abstract Algebra</title>. 3rd ed. Wiley, New York,
      2006.
    </biblio>

    <biblio type="raw" permid="hpx">
<!-- was [13] --><!-- Reference updated 5/4/2010 - TWJ -->
      Solow, D.
      <title>How to Read and Do Proofs</title>. 5th ed. Wiley, New York,
      2009.
    </biblio>

    <biblio type="raw" permid="NwG">
<!-- was [14] --><!-- No longer in print 5/4/2010 - TWJ -->
      van der Waerden, B. L.
      <title>A History of Algebra</title>. Springer-Verlag,
      New York, 1985. An account of the historical development of algebra.
    </biblio>
  </references>



  <section xml:id="sets-sage" permid="LfZ">
    <title>Sage</title>
    <introduction permid="bIL">
      <p permid="osP">
        Sage é um poderoso sistema para o estudo e a exploração de
        diferentes áreas de matemática. Nesse livro, você vai estudar
        uma variedade de estruturas algébricas, como grupos, aneis e corpos. Sage
        faz um ótimo trabalho na implementação de vários aspectos desses
        objetos como veremos nos capítulo a seguir. Mas aqui e agora, nesse capítulo
        inicial, nos concentraremos em algumas formas de explorar ao 
        máximo o uso do Sage.
      </p>

      <p permid="UzY">
        Você pode usar o Sage de diversas formas. Ele pode ser usado na
        linha de comando, quando instalado no seu computador. Também
        pode ser usado como uma aplicação web como o SageMathCloud.
        Assumiremos aqui que você está lendo esse texto como uma
        worksheet dentro de um Notebook Sage (uma interface em um
        navegador web), ou que essa é uma seção do livro apresentada
        através de páginas web, e você usara o Sage Cell Server através dessas
        páginas. Após os primeiros capítulos, as explicações devem funcionar
        igualmente bem independente do meio que você esteja utilizando 
        para executar os comandos Sage.
      </p>
    </introduction>

    <subsection permid="BMn">
      <title>Executando Comandos Sage</title>
      <p permid="nXq">
        A maior parte das interações acontecerão através de comandos
        em uma <em>célula de cálculo</em>.
        Se você está lendo isso em um Notebook Sage ou em uma versão
        web do livro, então você deverá uma célula de cálculo logo abaixo
        desse parágrafo. Clique uma vez dentro da céclula de cálculo e,
        se você estiver no Notebook Sage, você deve notar uma borda
        mais distintiva ao redor dela, um cursor piscando, além de um
        um pequeno e charmoso botão <q>evaluate</q> logo abaixo.
      </p>

      <sage/>

      <p permid="Uez">
        No cursor, digite <c>2+2</c> e clique no botão evaluate.
        Um  <c>4</c> apareceu abaixo da célula?
        Se sim, você conseguiu enviar um comando para o Sage calcular e 
        recebeu de volta a resposta (correta).
      </p>

      <p permid="AlI">
        Aqui está uma outra célula de cálculo.
        Tenta executar o comando <c>factorial(300)</c> aqui.
      </p>

      <sage/>

      <p permid="gsR">
        Hmmmmm.
        Isso é um inteiro realmente grande. Se você notar barras
        no final de cada linha, isso significa que o resultado continua
        na linha seguinte, como há 615 dígitos no resultado.
      </p>

      <p permid="MAa">
        Para criar novas células de cálculo no Sage Notebook (apenas nele)
        passe com o mouse acima de uma outra célula, ou abaixo do resultado
        de uma célula. Quando você notar uma fina barra azul ao longo
        do comprimento do seu worksheet, clique nela e outra célula
        de cálculo será aberta, pronta para a entrada de comandos.
        Observe que o worksheet lembrará todos os cálculos que você
        faz, na ordem que você os faz, não importa onde você posicione as
        células, assim é importante se manter organizado e adicionar
        novas células na parte inferior.
      </p>

      <p permid="sHj">
        Tente colocar o seu cursos logo abaixo do mostruoso valor de
        <m>300!</m> que você obteve.
        Clique na barra azul e tente outro cálculo de fatorial na nova
        célula de cálculo.
      </p>

      <p permid="YOs">
        Cada célula de cálculo exibirá apenas o resultado do último
        comando na célula. Tente prever a saída dos seguintes comandos
        antes de executar a célula.
      </p>
            <!-- Doctest framework *will* create output from "b", contrary to notebook behavior -->
            <!-- So doctest will fail, and doctest="not tested" does not help the situation -->
            <sage permid="wAR">
                <input>
            a = 10
            b = 6
            b = b - 10
            a = a + 20
            a
            </input>
                <output>30</output>
            </sage>

      <p permid="EVB">
        A célula de cálculo a seguir não irá exibir nada uma vez que o único
        comando presente não cria uma saída. No entanto ela
        terá um efeito, como você verá ao executar a célula subsequente.
        Note como isso utiliza o valor de <c>b</c> acima.
        Execute essa célula de cálculo <em>uma vez</em>.
        Exatamente uma única vez.
        Ainda que ela  <em>aparente</em> não fazer nada.
        Se você executar duas vezes, seu cartão de credito
        será cobrado duas vezes.
        your credit card may be charged twice.
      </p>

            <sage permid="IPj">
                <input>b = b + 50</input>
            </sage>

      <p permid="lcK">
        Agora execute essa célula, que produziá alguma saída.
      </p>

            <sage permid="oWs">
                <input>b + 20</input>
                <output>66</output>
            </sage>

      <p permid="RjT">
        Então <c>b</c> começou a existir como <c>6</c>.
        Subtraimos <m>10</m> imediatamente depois.
        Em seguida, uma célula subsequente adicionou <c>50</c>.
        Assumindo que você executou essa célula <em>exatamente</em> uma
        vez! Na última célula criamos <c>b+20</c>
        (mas não o salvamos)
        e é esse valor (<m>66</m>) que é a saída,
        enquanto <c>b</c> ainda é <m>46</m>.
      </p>

      <p permid="xrc">
        Você pode combinar diversos comando em uma linha com uma 
        semi-vírgula. Essa é uma ótima forma de exibir diversas
        saídas de uma célula de cálculo. A sintaxe para a construção
        de uma matrix deve ser clara quando você ver a
        saída, mas, se não form, não é muito importante entende-la agora.
      </p>

            <sage permid="VdB">
                <input>A = matrix([[3, 1], [5,2]]); A</input>
                <output>
            [3 1]
            [5 2]
            </output>
            </sage>
            <sage permid="BkK">
                <input>print(A); print(); print(A.inverse())</input>
                <output>
            [3 1]
            [5 2]
            &lt;BLANKLINE&gt;
            [ 2 -1]
            [-5  3]
            </output>
            </sage>
    </subsection>

    <subsection permid="hTw">
      <title>Ajuda Imediata</title>
      <p permid="dyl">
        Alguns comandos em Sage são <q>funções,</q> um
        exemplo é o <c>factorial()</c> acima.
        Outros comandos são <q>métodos</q>
        de um objeto e funcionam como características de
        objetos, um exemplo é o <c>.inverse()</c> como
        um método de uma matriz. Uma vez que você sabe criar um
        objeto (como uma matriz), então é fácil consultar todos
        os métodos disponíveis. Escreva o nome do objeto,
        em seguida coloque um ponto e aperte a tecla TAB.
        Se você definiu <c>A</c> como acima, então a célula
        de cálculo a seguir está pronta para ser utilizada, clique
        nela e aperte TAB (Não <q>evaluate</q>!)
        then the compute cell below is ready to go,
        Você deve obter uma longa lista com os métodos possíveis.
      </p>

            <sage doctest="not tested" permid="Efq">
                <input>A.</input>
            </sage>

      <p permid="JFu">
        Para obter ajuda na utilização de um método de algum objeto, escreva
        o nome do método após o ponto (sem parênteses), digite um
        ponto de interrogação e aperta TAB (Aperte ESC para remover a lista
        ou clique no texto para algum método)
      </p>

            <sage doctest="not tested" permid="kmz">
                <input>A.inverse?</input>
            </sage>

      <p permid="pMD">
        Com mais um ponto de interrogação você pode visualizar até
        mesmo as instruções que foram programadas no Sage para que
        o método funcione, basta mover a tela para baixo, ápós
        a documentação limitada por aspas triplas (<c>"""</c>):
      </p>

            <sage doctest="not tested" permid="QtI">
                <input>A.inverse??</input>
            </sage>

      <p permid="VTM">
        É válido apresentar o que o Sage faz quando há algum erro.
        Você provavelmente verá muitos desse no início e, à primeira
        vista eles parecem intimidadores. Mas, com o tempo, você 
        aprender a utilizá-los efetivamente, e também
        vai se tornar mais experiente com o Sage e se depara
        com eles cada vez menos. Execute a céluila abaixo, ela pede
        a inversa de uma matrix que não possui inversa. Então releia o comentário·
        Then reread the commentary.
      </p>

            <sage permid="hrT">
                <input>
            B = matrix([[2, 20], [5, 50]])
            B.inverse()
            </input>
                <output>
            Traceback (most recent call last):
            ...
            ZeroDivisionError: matrix must be nonsingular
            </output>
            </sage>

      <p permid="CaV">
        Clique à esquerda da mensagem de erro para a expandir completamente
        (outro clique a esconde, e um terceiro clique traz de volta a 
        forma abreviada). Leia primeiramente a parte inferior da mensagem
        de erro, é a sua melhor explicação. Aqui, um
         <c>ZeroDivisionError</c> não está 100% correto, mas se aproxima.
        A matriz não é invertível, não diferindo muito de como não
        podemos dividir escalares por zero. O restante da mensagem começa
        mostrando onde o erro aconteceu primeiro no seu código, em seguida
        vários locais onde funções intermediárias foram chamadas, até 
        o ponto específico do Sage onde o problema ocorreu. Ocasionalmente
        essas mensagens te darão algumas pistas, mas outras vezes
        elas são completamente indecifráveis. Não se deixe amedrontar se
        elas parecerem misteriorsas, mas sempre lembre de ler primeiramente
        a última linha, então volte e leia as linhas iniciais para algo
        que parece com o seu código.
      </p>
    </subsection>

    <subsection permid="OaF">
      <title>Comentando seu Trabalho</title>
      <p permid="iie">
        Comentar seu trabalho quando se utiliza o Notebook Sage é bem fácil.
        (O que vem a seguir se aplica apenas se você está lendo isso dentro de um Notebook
        Sage. Caso contrário você pode abrir um worksheet no Notebook Sage e tentar lá)
        Você pode abrir um pequeno processador de texto passando o mouse até você
        ver uma fina barra azul novamente, agora clique nela mas segurando a tecla SHIFT
        ao mesmo tempo.
        Tente algumas fontes, cores, listas, etc, e então clique no botão
        <q>Save changes</q> para sair.
        Dê um clique duplo no seu texto para editá-lo novamente.
      </p>

      <p permid="Opn">
        Abra o processor de textos novamente e crie um novo texto (talvez junto da
        célula de cálculo vazia, logo abaixo)
        Digite <em>exatamente</em> o texto a seguir
        <cd>
          <cline>Pythagorean Theorem: $c^2=a^2+b^2$</cline>
        </cd>
        e salve as alterações.
        Os símbolos entre os cifrões são escritos de acordo com a linguagem de
        formatação matemática conhecida como <tex/> <mdash/> pesquise na internet
        para descobrir mais sobre essa popular ferramenta.
        (Bem, é extremamente popular entre matemáticos e físicos)
      </p>

      <sage/>
    </subsection>

    <subsection permid="uhO">
      <title>Listas</title>
      <p permid="uww">
        Muitas das nossas interações com conjuntos se darão através
        de listas em Sage. Tais listas não são exatamente conjuntos
        <mdash/> eles permitem elementos duplicados e a ordem importa.
        No entanto eles estão tão próximos de conjuntos, e são tão 
        simples e eficazes que as utilizaremos regularmente.
        Criamos uma divertida lista para praticar, as
        aspas significam que os itens são apenas texto, sem
        significado especial. Execute essas células de cálculo
        a medida que as apresentamos.
      </p>

            <sage permid="Nzc">
                <input>
            zoo = ['cobra', 'papagaio', 'elefante', 'babuino', 'bezouro']
            zoo
            </input>
                <output>
            ['cobra', 'papagaio', 'elefante', 'babuino', 'bezouro']
            </output>
            </sage>

      <p permid="aDF">
        Então os colchetes definem os limites da nossa lista,
        vírgulas separam os itens e, finalmente, podemos
        dar um nome para a lista. Para trabalhar apenas com um
        item da lista usamos o nome da lista e um par de
        colchetes com o índice. Observe que os índices
        das listas <em>começam sempre em zero</em>.
        Isso pode parecer estranho mas vai ser natural no futuro.
        This will seem odd at first and will seem very natural later.
      </p>

            <sage permid="tGl">
                <input>zoo[2]</input>
                <output>'elefante'</output>
            </sage>

      <p permid="GKO">
        Podemos adicionar um novo animal no zoo, ele é 
        colocada no final da lista, a direita dos demais elementos.
      </p>

            <sage permid="ZNu">
                <input>zoo.append('avestruz'); zoo</input>
                <output>['cobra', 'papagaio', 'elefante', 'babuino', 'bezouro', 'avestruz']</output>
            </sage>

      <p permid="mRX">
        Podemos remover um elemento
      </p>

            <sage permid="FUD">
                <input>
            zoo.remove('papagaio')
            zoo
            </input>
                <output>['cobra', 'elefante', 'babuino', 'bezouro', 'avestruz']</output>
            </sage>

      <p permid="SZg">
        Podemos extrair uma sublista. Aqui, podemos começar
        com o elemento 1 (o elefante) e ir até, <em>sem
        incluir</em>, o elemento 3 (o bezouro).
        Novamente, um pouco estranho, mas vai parecer natural depois.
        Por enquanto, note que estamos extraindo dois itens da lista,
        exatamente <m>3-1=2</m> elementos.
      </p>

            <sage permid="mbM">
                <input>
            mamiferos = zoo[1:3]
            mamiferos
            </input>
                <output>['elfante', 'babuino']</output>
            </sage>

      <p permid="zgp">
        Frequentemente iremos checar se duas listas
        são iguais. Para fazer isso será necessário ordenar
        a lista primeiro. Uma função cria uma nova lista,
        ordenada, deixando a lista original inalterada.
        Precisamos então salvar essa lista nova com um novo nome.
      </p>

            <sage permid="SiV">
                <input>
            novozoo = sorted(zoo)
            novozoo
            </input>
                <output>['avestruz', 'babuino', 'bezouro','cobra','elefante']</output>
            </sage>
            <sage permid="yqe">
                <input>
            zoo.sort()
            zoo
            </input>
                <output>['avestruz', 'babuino', 'bezouro','cobra','elefante']</output>
            </sage>

      <p permid="fny">
        Observe que, ao executar a última célula, o seu zoo mudou e
        alguns dos comandos anteriores não serão executados da mesma forma. Se
        quiser testar, volte para o início, na criação do zoo e execute
        as célula novamente a partir do início com um zoo novo.
      </p>

      <p permid="LuH">
        Uma construção chamada de <term>compreensão de listas</term> is especialmente
        poderosa,  principalmente porque ela se assemelha bastante com 
        a notação que usamos para descrever conjuntos. Suponha que queremos
        formar o plural dos nomes das animais no nosso zoo. Constrímos
        uma nova lista baseada nos elementos da lista antiga.
      </p>

            <sage permid="exn">
                <input>
            zoo_plural = [animal+'s' for animal in zoo]
            zoo_plural
            </input>
                <output>['avestruzs', 'babuinos', 'bezouros','cobras','elefantes']</output>
            </sage>

      <p permid="rBQ">
        É quase como dizer: adicione um <q>s</q> em cada nome de animal, 
        para cada animal no zoo, e o coloque no fim da lista.
        Perfeito.
        (Exceto pelo faot do plural de <q>avestruz</q> estar errado.)
      </p>
    </subsection>

    <subsection permid="aoX">
      <title>Listas de Inteiros</title>
      <p permid="XIZ">
        Um tipo final de lista, com números agora.
        A função <c>srange()</c> cria uma lista de inteiros
        (O <q>s</q> no nome da função vem de <q>Sage</q>
        pois produz inteiros que o Sage entende mais adequadamente. 
        Muitas das dificuldades com Sage e teoria dos grupos podem
        ser amenizadas usando apenas esse comando para criar listas
        de inteiros). Em sua forma mais simples, um comando como
        <c>srange(12)</c> cria uma lista de 12 inteiros,
        <em>começando no zero</em> e subindo até
        <em>mas sem incluir</em>, o 12.
        Parece familiar?
      </p>

            <sage permid="KEw">
                <input>duzia = srange(12); dozen</input>
                <output>[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]</output>
            </sage>

      <p permid="DQi">
        Existem duas outras formas de usar o <c>srange()</c>. Você
        deve conseguir entender observando os exemplos
      </p>

            <sage permid="qLF">
                <input>tees = srange(13, 20); teens</input>
                <output>[13, 14, 15, 16, 17, 18, 19]</output>
            </sage>
            <sage permid="WSO">
                <input>decadas = srange(1900, 2000, 10); decadas</input>
                <output>[1900, 1910, 1920, 1930, 1940, 1950, 1960, 1970, 1980, 1990]</output>
            </sage>
    </subsection>

    <subsection permid="Gwg">
      <title>Salvando e Compartilhando seu Trabalho</title>
      <p permid="jXr">
        Existe um botão <q>Save</q> no canto superior direito do Notebook Sage.
        Isso vai salvar uma cópia atual do seu worksheet e você poderá
        recuperar o seu trabalho no futuro, no entanto você 
        deverá re-executar todas as células quando você reabrir o worksheet.
      </p>

      <p permid="QeA">
        Existe também uma lista de comandos sob  <q>File</q>, no 
        canto superior esquerdo, logo acima da sua primeira célula.
        (Não confundir com o menu File/Arquivo do seu navegador!).
        Você deverá encontrar uma opção com o nome
        <q>Save worksheet to a file...</q> Ao fazer isso, você
        está criando uma cópia do seu worksheet no formato <c>sws</c>
        (abreviação para <q>Sage WorkSheet</q>).
        Você pode enviar esse arquivo por e-mail, ou publicar em um
        site, e outros usuários do Sage podem usar o link <q>Upload</q>
        na página inicial de seus Notebooks para incorporar uma cópia
        do seu worksheet no notebook deles.
      </p>

      <p permid="wlJ">
        Existem outras formas de compartilhar worksheets que você
        pode experimentar, mas essa forma permite que você compartilhe
        seu worksheet com qualquer um em quase qualquer ambiente.
      </p>

      <p permid="csS">
        Cobrimos muito nessa selao, então fique a vontade para voltar
        depois para pegar os detalhes que você pode ter deixado passar.
        Existem também muitas oturas funcionalidades no 
        Notebook Sage que não cobrimos.
      </p>
    </subsection>

  </section>

  <exercises xml:id="sets-sage-exercises" permid="SKy">
    <title>Exercícios Sage</title>
    <exercise number="1" permid="jnk" xml:id="sets-sage-exercise-cocalc">
      <statement>
        <p permid="wHi">
          Esse exercício serve apenas para garantir que você sabe
          como usar o Sage. Você pode usar o servidor Sage Notebook
          ou o serviço online do CoCalc no seu navegador.
          De qualquer forma, crie um novo worksheet. Faça algum
          cálculo não trivial, talvez algum belo gráfico ou um 
          cálculo numérico horrível com uma precisão insana. Crie
          alguma lista e a explore um pouco. Talvez inclua algum 
          texto bem formatado ou  <tex/> usando o mini processador
          de textos incluso no Sage.
          (passe o mouse até a barra azul aparecer entre as células, aperte
          SHIFT e clique) ou crie comentários nas células no CoCalc
          usando o <term>magics</term>,
          <c>%html</c> ou <c>%md</c> em uma linha própria seguida de algum texto
          em <init>HTML</init> ou com a sintaxe Markdown.
          (respectively).
        </p>

        <p permid="cOr">
          Use qualquer mecanismo que o seu professor criou para enviar
          o seu trabalho, ou salve o seu worksheet e compartilhe com um
          colega.
        </p>
      </statement>
    </exercise>

  </exercises>
</chapter>
